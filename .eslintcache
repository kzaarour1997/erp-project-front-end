[{"/home/mario/Desktop/ERP Project/front/src/index.js":"1","/home/mario/Desktop/ERP Project/front/src/App.js":"2","/home/mario/Desktop/ERP Project/front/src/Components/Teams.js":"3","/home/mario/Desktop/ERP Project/front/src/Components/Login.js":"4","/home/mario/Desktop/ERP Project/front/src/Components/Reports.js":"5","/home/mario/Desktop/ERP Project/front/src/Components/Projects.js":"6","/home/mario/Desktop/ERP Project/front/src/Components/Employees.js":"7","/home/mario/Desktop/ERP Project/front/src/Components/Admins.js":"8","/home/mario/Desktop/ERP Project/front/src/Components/Sidenav.js":"9","/home/mario/Desktop/ERP Project/front/src/Components/Pagination.js":"10","/home/mario/Desktop/erp-project-front-end/src/index.js":"11","/home/mario/Desktop/erp-project-front-end/src/App.js":"12","/home/mario/Desktop/erp-project-front-end/src/Components/Reports.js":"13","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/Employees.js":"14","/home/mario/Desktop/erp-project-front-end/src/Components/Modal.js":"15","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/EmployeeInfo.js":"16","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/AddEmployeeModal.js":"17","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/DeleteEmployee.js":"18","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/UpdateEmployee.js":"19","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/ModalUpdate.js":"20","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/ViewEmployee.js":"21","/home/mario/Desktop/erp-project-front-end/src/Components/SideNav/Sidenav.js":"22","/home/mario/Desktop/erp-project-front-end/src/Components/Pagination/Pagination.js":"23","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/ViewModal.js":"24","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/KPI.js":"25","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/KPIModal.js":"26","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/EmployeeInfoEven.js":"27","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/DeleteEmployeeEven.js":"28","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/Admins.js":"29","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/AddAdminModal.js":"30","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/AdminInfo.js":"31","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/AdminInfoEven.js":"32","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/ViewAdmin.js":"33","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/ViewModal.js":"34","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/UpdateAdmin.js":"35","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/ModalUpdate.js":"36","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/DeleteAdmin.js":"37","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/DeleteAdminEven.js":"38","/home/mario/Desktop/erp-project-front-end/src/Components/Login/Login.js":"39","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/Charts.js":"40","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/Teams.js":"41","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/TeamInfo.js":"42","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/TeamInfoEven.js":"43","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/DeleteTeam.js":"44","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/DeleteTeamEven.js":"45","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/AddTeamModal.js":"46","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/ViewTeam.js":"47","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/ViewModal.js":"48","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/AssignTo.js":"49","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/AssignToModal.js":"50","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/Projects.js":"51","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/AddProjects.js":"52","/home/mario/Desktop/erp-project-front-end/src/Components/Context/Context.js":"53","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/ProjectInfo.js":"54","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/ViewProject.js":"55","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/ViewModal.js":"56","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/AddProjectsEmployee.js":"57","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/AssignEmployee.js":"58","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/AssignToModal.js":"59"},{"size":589,"mtime":1609788019075,"results":"60","hashOfConfig":"61"},{"size":1472,"mtime":1609795372915,"results":"62","hashOfConfig":"61"},{"size":176,"mtime":1609886869521,"results":"63","hashOfConfig":"61"},{"size":4899,"mtime":1609886853733,"results":"64","hashOfConfig":"61"},{"size":182,"mtime":1609886862549,"results":"65","hashOfConfig":"61"},{"size":185,"mtime":1609886859805,"results":"66","hashOfConfig":"61"},{"size":187,"mtime":1609886850761,"results":"67","hashOfConfig":"61"},{"size":21603,"mtime":1609921750835,"results":"68","hashOfConfig":"61"},{"size":6601,"mtime":1609886865701,"results":"69","hashOfConfig":"61"},{"size":695,"mtime":1609888234091,"results":"70","hashOfConfig":"61"},{"size":354,"mtime":1610193817031,"results":"71","hashOfConfig":"72"},{"size":4258,"mtime":1610709111602,"results":"73","hashOfConfig":"72"},{"size":190,"mtime":1610238254563,"results":"74","hashOfConfig":"72"},{"size":3960,"mtime":1610646731575,"results":"75","hashOfConfig":"72"},{"size":4249,"mtime":1609886856385,"results":"76","hashOfConfig":"77"},{"size":1649,"mtime":1610701226433,"results":"78","hashOfConfig":"72"},{"size":5073,"mtime":1610486253570,"results":"79","hashOfConfig":"72"},{"size":1178,"mtime":1610305601991,"results":"80","hashOfConfig":"72"},{"size":762,"mtime":1610492844199,"results":"81","hashOfConfig":"72"},{"size":3685,"mtime":1610704045268,"results":"82","hashOfConfig":"72"},{"size":797,"mtime":1610493904980,"results":"83","hashOfConfig":"72"},{"size":6723,"mtime":1610362148256,"results":"84","hashOfConfig":"72"},{"size":722,"mtime":1610238582336,"results":"85","hashOfConfig":"72"},{"size":1788,"mtime":1610488485554,"results":"86","hashOfConfig":"72"},{"size":792,"mtime":1610492743656,"results":"87","hashOfConfig":"72"},{"size":2480,"mtime":1610656710885,"results":"88","hashOfConfig":"72"},{"size":1882,"mtime":1610494220574,"results":"89","hashOfConfig":"72"},{"size":1196,"mtime":1610304038326,"results":"90","hashOfConfig":"72"},{"size":3801,"mtime":1610656966621,"results":"91","hashOfConfig":"72"},{"size":4851,"mtime":1610645274983,"results":"92","hashOfConfig":"72"},{"size":1365,"mtime":1610381824110,"results":"93","hashOfConfig":"72"},{"size":1750,"mtime":1610379830720,"results":"94","hashOfConfig":"72"},{"size":638,"mtime":1610493740145,"results":"95","hashOfConfig":"72"},{"size":1324,"mtime":1610316403050,"results":"96","hashOfConfig":"72"},{"size":742,"mtime":1610371902358,"results":"97","hashOfConfig":"72"},{"size":3058,"mtime":1610494839530,"results":"98","hashOfConfig":"72"},{"size":1199,"mtime":1610381813646,"results":"99","hashOfConfig":"72"},{"size":1258,"mtime":1610365488155,"results":"100","hashOfConfig":"72"},{"size":4900,"mtime":1610362442332,"results":"101","hashOfConfig":"72"},{"size":3865,"mtime":1610462998000,"results":"102","hashOfConfig":"72"},{"size":3718,"mtime":1610647758265,"results":"103","hashOfConfig":"72"},{"size":1321,"mtime":1610532983983,"results":"104","hashOfConfig":"72"},{"size":1623,"mtime":1610495633787,"results":"105","hashOfConfig":"72"},{"size":1804,"mtime":1610552224260,"results":"106","hashOfConfig":"72"},{"size":1794,"mtime":1610540665685,"results":"107","hashOfConfig":"72"},{"size":2378,"mtime":1610495991714,"results":"108","hashOfConfig":"72"},{"size":726,"mtime":1610495439111,"results":"109","hashOfConfig":"72"},{"size":1444,"mtime":1610496378982,"results":"110","hashOfConfig":"72"},{"size":788,"mtime":1610493405070,"results":"111","hashOfConfig":"72"},{"size":2138,"mtime":1610709301928,"results":"112","hashOfConfig":"72"},{"size":4228,"mtime":1610703841960,"results":"113","hashOfConfig":"72"},{"size":3389,"mtime":1610698980836,"results":"114","hashOfConfig":"72"},{"size":115,"mtime":1610654990377,"results":"115","hashOfConfig":"72"},{"size":1269,"mtime":1610704707549,"results":"116","hashOfConfig":"72"},{"size":767,"mtime":1610671550546,"results":"117","hashOfConfig":"72"},{"size":620,"mtime":1610671352283,"results":"118","hashOfConfig":"72"},{"size":868,"mtime":1610670954455,"results":"119","hashOfConfig":"72"},{"size":1040,"mtime":1610704777373,"results":"120","hashOfConfig":"72"},{"size":1825,"mtime":1610706178792,"results":"121","hashOfConfig":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"16n7czc",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"1mlw8mn",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"148"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"159"},"809f1y",{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"148"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"148"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"148"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"148"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"148"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"148"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"148"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"148"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"148"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"148"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"148"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"148"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mario/Desktop/ERP Project/front/src/index.js",[],["273","274"],"/home/mario/Desktop/ERP Project/front/src/App.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Teams.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Login.js",["275"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"../App.css\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [authErr, setAuthErr] = useState(\"\");\n  const [passErr, setPassErr] = useState(\"\");\n  const [usernameErr, setUsernameErr] = useState(\"\");\n  const [isPassShown, setIsPassShown] = useState(false);\n\n  const toggleVisibility = () => {\n    setIsPassShown(!isPassShown);\n  };\n\n  const HandleLogin = async (e) => {\n    e.preventDefault();\n    if (!username && !password) {\n      setUsernameErr(\"Username is invalid!\");\n      setPassErr(\"Password is invalid!\");\n      setAuthErr(\"\");\n    } else if (username && !password) {\n      setUsernameErr(\"\");\n      setPassErr(\"Password is invalid\");\n      setAuthErr(\"\");\n    } else if (!username && password) {\n      setPassErr(\"\");\n      setUsernameErr(\"Username is invalid!\");\n      setAuthErr(\"\");\n    } else if (password.length < 6) {\n      setPassErr(\"Password must containt at least 6 characters!\");\n      setAuthErr(\"\");\n      setUsernameErr(\"\");\n    } else if (username.length < 5) {\n      setUsernameErr(\"Username must containt at least 5 characters!\");\n      setAuthErr(\"\");\n      setPassErr(\"\");\n    } else if (username.length < 5 && password.length < 6) {\n      setUsernameErr(\"Username must containt at least 5 characters!\");\n      setPassErr(\"Password must containt at least 6 characters!\");\n      setAuthErr(\"\");\n    } else {\n      try {\n        await Axios.post(\"http://localhost:8000/api/login\", {\n          username: username,\n          password: password,\n        }).then((response) => {\n          setAuthErr(response.data.error + \" Username or Password\");\n          setUsernameErr(\"\");\n          setPassErr(\"\");\n          setToken(response.data.access_token);\n          {\n            localStorage.setItem(\"image\", response.data.user.image);\n            localStorage.setItem(\"id\", response.data.user.id);\n            localStorage.setItem(\"username\", response.data.user.username);\n            response &&\n              response.data &&\n              response.data.access_token &&\n              localStorage.setItem(\"token\", response.data.access_token);\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"login\">\n        <div className=\"login_block\">\n          <form\n            className=\"login-form\"\n            style={{ width: \"40%\", margin: \"8% auto\" }}\n          >\n            <div className=\"form-group\">\n              <p>\n                {authErr ? (\n                  <span class=\"error_msg\">\n                    {authErr}\n                    {\"\\t\"}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </p>\n              <label className=\"login-label\" htmlFor=\"exampleInputEmail1\">\n                Username\n              </label>\n              <p>\n                {usernameErr ? (\n                  <span class=\"error_msg\">\n                    {usernameErr}\n                    {\"\\t\"}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </p>\n              <input\n                type=\"text\"\n                value={username}\n                className=\"form-control-login\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Username\"\n                onChange={(e) => {\n                  setUsername(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"login-label\" htmlFor=\"exampleInputPassword1\">\n                Password\n              </label>\n              <br />\n              {passErr ? <span class=\"error_msg\">{passErr}</span> : \"\"}\n              <div className=\"eye\">\n                <input\n                  type={isPassShown ? \"text\" : \"password\"}\n                  value={password}\n                  className=\"form-control-login\"\n                  id=\"exampleInputPassword1\"\n                  placeholder=\"Password\"\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                />{\" \"}\n                <i\n                  id=\"fa1\"\n                  className=\"fa fa-eye password-icon\"\n                  onClick={toggleVisibility}\n                />\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn\" onClick={HandleLogin}>\n              <span className=\"submit\"> Submit</span>\n            </button>\n          </form>\n          {token ? <Redirect exact to=\"/Admins\" /> : <Redirect exact to=\"/\" />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/mario/Desktop/ERP Project/front/src/Components/Reports.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Projects.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Employees.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Admins.js",["276"],"import Axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Sidenav from \"./Sidenav\";\nimport Pagination from './Pagination';\n\nconst Admins = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [newfirstName, setNewfirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newImage, setNewImage] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [render, setRender] = useState();\n  const [lastnameErr, setLastnameErr] = useState(\"\");\n  const [emailErr, setEmailErr] = useState(\"\");\n  const [firstnameErr, setFirstnameErr] = useState(\"\");\n  const [passErr, setPassErr] = useState(\"\");\n  const [usernameErr, setUsernameErr] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [successUpdate, setSuccessUpdate] = useState(\"\");\n  const [imageErr, setImageErr] = useState(\"\");\n  const [newlastnameErr, setnewLastnameErr] = useState(\"\");\n  const [newemailErr, setnewEmailErr] = useState(\"\");\n  const [newfirstnameErr, setnewFirstnameErr] = useState(\"\");\n  const [newimageErr, setnewImageErr] = useState(\"\");\n  const [infoErr, setInfoErr] = useState(\"\");\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(6);\n\n  const numOfAdmins = users.length;\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:8000/api/users\", {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    }).then((response) => {\n      setUsers(response.data);\n      setLoading(false);\n    });\n  }, [render]);\n\n  useEffect(() => {\n    setFilteredData(\n      users.filter(\n        (user) =>\n          user.firstname.toLowerCase().includes(search.toLowerCase()) ||\n          user.lastname.toLowerCase().includes(search.toLowerCase()) ||\n          user.email.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, users, render]);\n\n  useEffect(() => {\n    localStorage.getItem(\"image\");\n    console.log(localStorage.getItem(\"image\"));\n  }, []);\n\n  useEffect(() => {\n    localStorage.getItem(\"id\");\n    console.log(localStorage.getItem(\"id\"));\n  }, []);\n\n  useEffect(() => {\n    localStorage.getItem(\"username\");\n    console.log(localStorage.getItem(\"username\"));\n  }, []);\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"firstname\", firstName);\n    data.append(\"lastname\", lastName);\n    data.append(\"email\", email);\n    data.append(\"image\", image);\n    data.append(\"username\", userName);\n    data.append(\"password\", password);\n    try {\n      await Axios.post(\"http://localhost:8000/api/register\", data, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((response) => {\n        console.log(response.data);\n        localStorage.getItem(\"token\");\n        setLoading(false);\n        setUsers([\n          ...users,\n          {\n            firstname: firstName,\n            lastname: lastName,\n            email: email,\n            image: image,\n            username: userName,\n            password: password,\n          },\n        ]);\n        setSuccess(\"Data has been inserted\");\n        setFirstnameErr(\"\");\n        setLastnameErr(\"\");\n        setEmailErr(\"\");\n        setUsernameErr(\"\");\n        setPassErr(\"\");\n        setImageErr(\"\");\n      });\n    } catch (error) {\n      if (\n        error.response.data.error.firstname &&\n        error.response.data.error.lastname &&\n        error.response.data.error.email &&\n        error.response.data.error.username &&\n        error.response.data.error.password &&\n        error.response.data.error.image\n      ) {\n        setFirstnameErr(error.response.data.error.firstname);\n        setLastnameErr(error.response.data.error.lastname);\n        setEmailErr(error.response.data.error.email);\n        setUsernameErr(error.response.data.error.username);\n        setPassErr(error.response.data.error.password);\n        setImageErr(error.response.data.error.image);\n      } else if (!error.response.data.error.firstname) {\n        setFirstnameErr(\"\");\n      } else if (\n        error.response.data.error.firstname ||\n        error.response.data.error.lastname ||\n        error.response.data.error.email ||\n        error.response.data.error.username ||\n        error.response.data.error.password ||\n        error.response.data.error.image\n      ) {\n        setInfoErr(\"Your information are not Valid!\");\n      } else if (!error.response.data.error.lastname) {\n        setLastnameErr(\"\");\n      } else if (!error.response.data.error.email) {\n        setEmailErr(\"\");\n      } else if (!error.response.data.error.username) {\n        setUsernameErr(\"\");\n      } else if (!error.response.data.error.password) {\n        setPassErr(\"\");\n      } else if (!error.response.data.error.image) {\n        setImageErr(\"\");\n      } else if (error.response.data.error.firstname) {\n        setFirstnameErr(error.response.data.error.firstname);\n      } else if (error.response.data.error.lastname) {\n        setLastnameErr(error.response.data.error.lastname);\n      } else if (error.response.data.error.email) {\n        setEmailErr(error.response.data.error.email);\n      } else if (error.response.data.error.username) {\n        setUsernameErr(error.response.data.error.username);\n      } else if (error.response.data.error.password) {\n        setPassErr(error.response.data.error.password);\n      } else if (error.response.data.error.image) {\n        setImageErr(error.response.data.error.image);\n      }\n    }\n  };\n  if (loading) {\n    return <p>Loading data...</p>;\n  }\n  const deleteItem = async (id) => {\n    try {\n      await Axios.delete(`http://localhost:8000/api/users/${id} `, {\n        headers: {\n          Accept: \"application/json\",\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((data) => {\n        if (data.status === 200) {\n          console.log(data);\n          // alert(\"Deleted!\");\n          const newData = users.filter((item) => item.id !== id);\n          setUsers(newData);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateInfo = async (id) => {\n    if (!newfirstName && !newLastName && !newEmail && !newImage) {\n      setnewFirstnameErr(\"Firstname is Required!\");\n      setnewLastnameErr(\"Lastname is Required!\");\n      setnewEmailErr(\"Email is Invalid!\");\n      setnewImageErr(\"Image is required!\");\n    } else if (newfirstName && !newLastName && !newEmail && !newImage) {\n      setnewFirstnameErr(\"\");\n      setnewLastnameErr(\"Lastname is Required!\");\n      setnewEmailErr(\"Email is Invalid!\");\n      setnewImageErr(\"Image is required!\");\n    } else if (!newfirstName && newLastName && !newEmail && !newImage) {\n      setnewFirstnameErr(\"Firstname is Required!\");\n      setnewLastnameErr(\"\");\n      setnewEmailErr(\"Email is Invalid!\");\n      setnewImageErr(\"Image is required!\");\n    } else if (!newfirstName && !newLastName && newEmail && !newImage) {\n      setnewFirstnameErr(\"Firstname is Required!\");\n      setnewLastnameErr(\"Lastname is Required!\");\n      setnewEmailErr(\"\");\n      setnewImageErr(\"Image is required!\");\n    } else if (!newfirstName && newLastName && !newEmail && newImage) {\n      setnewFirstnameErr(\"Firstname is Required!\");\n      setnewLastnameErr(\"Lastname is Required!\");\n      setnewEmailErr(\"Email is Invalid!\");\n      setnewImageErr(\"\");\n    } else if (!newEmail.includes(\"@\") && !newEmail.includes(\".com\")) {\n      setnewEmailErr(\"Please enter a valid email address\");\n    } else {\n      const data = new FormData();\n      data.append(\"firstname\", newfirstName);\n      data.append(\"lastname\", newLastName);\n      data.append(\"email\", newEmail);\n      data.append(\"image\", newImage);\n      try {\n        await Axios.post(\n          `http://localhost:8000/api/users/${id}?_method=PUT `,\n          data,\n          {\n            headers: {\n              \"content-type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          }\n        ).then((response) => {\n          console.log(response);\n          setRender(!render);\n          setSuccessUpdate(\"Data has been updated\");\n          setnewFirstnameErr(\"\");\n          setnewLastnameErr(\"\");\n          setnewEmailErr(\"\");\n          setnewImageErr(\"\");\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    if (!localStorage.getItem(\"token\")) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n\n  const indexOfLastPost = currentPage * postsPerPage;\n    // console.log(\"indexOfLastPost: \", indexOfLastPost);\n\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    // console.log(\"indexOfFirstPost: \", indexOfFirstPost);\n\n    const currentPosts = filteredData.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber => {\n        setCurrentPage(pageNumber);\n    };\n    console.log(\"currentPosts: \", currentPosts);\n\n  return (\n    <div className=\"admin\">\n      <Sidenav />\n\n      <div className=\"container\">\n        <div className=\"header\">\n          <button\n            type=\"button\"\n            id=\"change1\"\n            className=\"btn  btn-md\"\n            data-toggle=\"modal\"\n            data-target=\"#myModal\"\n          >\n            Add Admin\n          </button>\n          \n          <form className=\"search\">\n            <input\n              value={search}\n              placeholder=\"Find Admins...\"\n              type=\"text\"\n              name=\"\"\n              className=\"search__field\"\n              onChange={(e) => {\n                setSearch(e.target.value);\n              }}\n            />\n          </form>\n          <div className=\"username-section\">\n            <img\n              className=\"user-image\"\n              src={`http://localhost:8000/storage/${localStorage.getItem(\n                \"image\"\n              )}`}\n              alt=\"error\"\n            />\n          <div className=\"admin_name\">\n        <span >{localStorage.getItem(\"username\")}</span>\n        </div>\n          </div>\n        </div>\n       \n        <h1>\n          Number of Admins is{\"  \"}\n          <span className=\"badge badge-secondary\">{numOfAdmins}</span>\n        </h1>\n        {successUpdate ? (\n          <p className=\"alert alert-success\">{successUpdate}</p>\n        ) : (\n          \"\"\n        )}\n        <div className=\"admin\">\n          {filteredData.length === 0 ? (\n            <div>No result found!</div>\n          ) : (\n            currentPosts.map((arr) => {\n              return (\n                <div className=\"parent\" key={arr.id}>\n                  <img\n                    src={`http://localhost:8000/storage/${arr.image}`}\n                    alt=\"error\"\n                  />\n                  <p className=\"admins\">\n                    {arr.firstname} {arr.lastname}\n                    <span>{arr.email}</span>{\" \"}\n                  </p>\n                  <div className=\"buttons_under_admin\">\n                    <div className=\"dropdown\">\n                      <button\n                        id=\"change2\"\n                        className=\"btn  dropdown-toggle\"\n                        type=\"button\"\n                        data-toggle=\"dropdown\"\n                      >\n                        Update Admin info<span className=\"caret\"></span>\n                      </button>\n                      <ul className=\"dropdown-menu\">\n                        <p className=\"error_update\">\n                          {newfirstnameErr ? (\n                            <span className=\"error_msg\">{newfirstnameErr}</span>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                        <label className=\"updateLabel\">Firstname</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"enter firstname\"\n                          onChange={(e) => {\n                            setNewfirstName(e.target.value);\n                          }}\n                        />\n                        <p className=\"error_update\">\n                          {newlastnameErr ? (\n                            <span className=\"error_msg\">{newlastnameErr}</span>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                        <label className=\"updateLabel\">Lastname</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"enter lastname\"\n                          onChange={(e) => {\n                            setNewLastName(e.target.value);\n                          }}\n                        />\n                        <p className=\"error_update\">\n                          {newemailErr ? (\n                            <span className=\"error_msg\">{newemailErr}</span>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                        <label className=\"updateLabel\">Email</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"enter email\"\n                          onChange={(e) => {\n                            setNewEmail(e.target.value);\n                          }}\n                        />\n                        <p className=\"error_update\">\n                          {newimageErr ? (\n                            <span className=\"error_msg\">{newimageErr}</span>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                        <br></br>\n                        <label className=\"updateLabel\">\n                          Image\n                          <input\n                            className=\"form-control\"\n                            type=\"file\"\n                            name=\"image\"\n                            id=\"image\"\n                            placeholder=\"Enter your Address\"\n                            onChange={(e) => {\n                              setNewImage(e.target.files[0]);\n                              console.log(e.target.files[0]);\n                            }}\n                          />\n                        </label>\n                        <button\n                          id=\"change1\"\n                          className=\"Button_update\"\n                          onClick={() => {\n                            updateInfo(arr.id);\n                          }}\n                        >\n                          Edit\n                        </button>\n                      </ul>\n                    </div>\n                    <button\n                      className=\"Button\"\n                      id=\"change\"\n                      onClick={() => {\n                        deleteItem(arr.id);\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })\n          )}\n         \n        </div>\n        <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\n          <div className=\"modal-dialog modal-lg\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                  &times;\n                </button>\n                <h4 className=\"modal-title\">Add an Admin to the list</h4>\n              </div>\n              <form encType=\"multipart/form-data\">\n                <div className=\"modal-body\">\n                  {infoErr ? (\n                    <div className=\"alert alert-danger\">{infoErr}</div>\n                  ) : (\n                    \"\"\n                  )}\n                  {success ? (\n                    <div className=\"alert alert-success\">{success}</div>\n                  ) : (\n                    \"\"\n                  )}\n                  <label htmlFor=\"name\">First name:</label>\n                  <p className=\"err_pos\">\n                    {firstnameErr ? (\n                      <span className=\"error_msg\">{firstnameErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={firstName}\n                    className=\"form-control\"\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Enter firstname\"\n                    onChange={(e) => {\n                      setFirstName(e.target.value);\n                    }}\n                  />\n                  <label htmlFor=\"lastname\">Last name:</label>\n                  <p className=\"err_pos\">\n                    {lastnameErr ? (\n                      <span className=\"error_msg\">{lastnameErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={lastName}\n                    className=\"form-control\"\n                    id=\"lastname\"\n                    type=\"text\"\n                    placeholder=\"Enter lastname\"\n                    onChange={(e) => {\n                      setLastName(e.target.value);\n                    }}\n                  />\n                  <label htmlFor=\"email\">Email</label>\n                  <p className=\"err_pos\">\n                    {emailErr ? (\n                      <span className=\"error_msg\">{emailErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={email}\n                    className=\"form-control\"\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                    }}\n                  />\n                  <label htmlFor=\"image\">Image</label>\n                  <p className=\"err_pos\">\n                    {imageErr ? (\n                      <span className=\"error_msg\">{imageErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    className=\"form-control\"\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"image\"\n                    onChange={(e) => {\n                      setImage(e.target.files[0]);\n                      console.log(e.target.files[0]);\n                    }}\n                  />\n                  <label htmlFor=\"username\">Username:</label>\n                  <p className=\"err_pos\">\n                    {usernameErr ? (\n                      <span className=\"error_msg\">{usernameErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={userName}\n                    className=\"form-control\"\n                    id=\"username\"\n                    type=\"text\"\n                    placeholder=\"Enter username\"\n                    onChange={(e) => {\n                      setUserName(e.target.value);\n                    }}\n                  />\n                  <label htmlFor=\"password\">Password:</label>\n                  <p className=\"err_pos\">\n                    {passErr ? (\n                      <span className=\"error_msg\">{passErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={password}\n                    className=\"form-control\"\n                    id=\"password\"\n                    type=\"password\"\n                    placeholder=\"Enter password\"\n                    onChange={(e) => {\n                      setPassword(e.target.value);\n                    }}\n                  />\n                  <button\n                    id=\"add-button\"\n                    className=\"btn btn-lg btn-block\"\n                    onClick={handleAdd}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-default\"\n                  data-dismiss=\"modal\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        <div className=\"container mt-5\">\n                    <Pagination\n                        paginate={paginate}\n                        postsPerPage={postsPerPage}\n                        totalPosts={filteredData.length}\n                    />\n    </div>\n      </div>\n   \n    </div>\n  );\n};\nexport default Admins;\n","/home/mario/Desktop/ERP Project/front/src/Components/Sidenav.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Pagination.js",[],["277","278"],"/home/mario/Desktop/erp-project-front-end/src/index.js",[],["279","280"],"/home/mario/Desktop/erp-project-front-end/src/App.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Reports.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Employees/Employees.js",["281","282","283","284"],"import Axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Sidenav from \"../SideNav/Sidenav\";\nimport Pagination from \"../Pagination/Pagination\";\nimport EmployeeInfo from \"./EmployeeInfo\";\nimport AddEmployee from \"./AddEmployeeModal\";\nimport EmployeeInfoEven from \"./EmployeeInfoEven\";\n\nimport dataContext from \"../Context/Context\";\nimport { useContext } from \"react\";\n\nconst Employees = () => {\n  const [filteredData, setFilteredData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(6);\n\n  const { listEmployee, setListEmployee } = useContext(dataContext);\n\n  const numOfEmployees = listEmployee.length;\n\n  useEffect(() => {\n    setFilteredData(\n      listEmployee.filter(\n        (employee) =>\n          employee.firstname.toLowerCase().includes(search.toLowerCase()) ||\n          employee.lastname.toLowerCase().includes(search.toLowerCase()) ||\n          employee.email.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, listEmployee]);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredData.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  console.log(\"currentPosts: \", currentPosts);\n\n  return (\n    <div className=\"container container-xs\">\n      <Sidenav />\n      <div className=\"container\">\n        <div className=\"row header\">\n          <div className=\"col-md-2 col-sm-2\">\n            <button\n              type=\"button\"\n              id=\"change1\"\n              className=\"btn  btn-md\"\n              data-toggle=\"modal\"\n              data-target=\"#myModal\"\n            >\n              Add Employee\n            </button>\n          </div>\n          <div className=\"col-md-8 col-sm-6\">\n            <form className=\"search\">\n              <input\n                value={search}\n                placeholder=\"Find Employees...\"\n                type=\"text\"\n                name=\"\"\n                className=\"search__field\"\n                onChange={(e) => {\n                  setSearch(e.target.value);\n                }}\n              />\n            </form>\n          </div>\n          <div className=\"col-md-2 profile_admin\">\n            <div className=\"username-section\">\n              <img\n                className=\"user-image\"\n                src={`http://localhost:8000/storage/${localStorage.getItem(\n                  \"image\"\n                )}`}\n                alt=\"error\"\n              />\n            </div>\n            <div className=\"admin_name\">\n              <span>{localStorage.getItem(\"username\")}</span>\n            </div>\n          </div>\n        </div>\n        <h1>\n          Number of Employees is{\"  \"}\n          <span className=\"badge\">\n            <span className=\"badge-secondary\">{numOfEmployees}</span>\n          </span>\n        </h1>\n        <div className=\"sections\">\n          {filteredData.length === 0 ? (\n            <div className=\"no_result\">No result found!</div>\n          ) : (\n            currentPosts.map((arr, index) => {\n              if (index % 2 === 0) {\n                return <EmployeeInfo key={arr.id} employee={arr} />;\n              } else {\n                return <EmployeeInfoEven key={arr.id} employee={arr} />;\n              }\n            })\n          )}\n        </div>\n        <AddEmployee />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-3\"></div>\n        <div className=\"col-md-6\" style={{ textAlign: \"center\" }}>\n          <Pagination\n            paginate={paginate}\n            postsPerPage={postsPerPage}\n            totalPosts={filteredData.length}\n          />\n        </div>\n        <div className=\"col-md-3\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Employees;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Modal.js",["285"],"import React, { useState } from \"react\";\nimport { useModal } from \"react-modal-hook\";\nimport ReactModal from \"react-modal\";\nimport Axios from \"axios\";\n\nconst Modal = (props) => {\n  const [newfirstName, setNewfirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newImage, setNewImage] = useState(\"\");\n  const [newlastnameErr, setnewLastnameErr] = useState(\"\");\n  const [newemailErr, setnewEmailErr] = useState(\"\");\n  const [newfirstnameErr, setnewFirstnameErr] = useState(\"\");\n  const [newimageErr, setnewImageErr] = useState(\"\");\n  const [render, setRender] = useState(false);\n  const [successUpdate, setSuccessUpdate] = useState(\"\");\n\n  console.log(newfirstName);\n\n  const updateInfo = async (id) => {\n    const data = new FormData();\n    data.append(\"firstname\", newfirstName);\n    data.append(\"lastname\", newLastName);\n    data.append(\"email\", newEmail);\n    data.append(\"image\", newImage);\n    console.log(Object.values(data));\n    try {\n      await Axios.post(\n        `http://localhost:8000/api/users/${id}?_method=PUT `,\n        data,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      ).then((response) => {\n        console.log(response);\n        setRender(!render);\n        setSuccessUpdate(\"Data has been updated\");\n        setnewFirstnameErr(\"\");\n        setnewLastnameErr(\"\");\n        setnewEmailErr(\"\");\n        setnewImageErr(\"\");\n      });\n    } catch (err) {\n      console.log(err);\n    }\n    // }\n  };\n  const [showModal, hideModal] = useModal(() => (\n    <ReactModal ariaHideApp={false} isOpen>\n      <center>\n        <div>\n          <p> Username:{props.data.username}</p>\n          <p> Firstname: {props.data.firstname}</p>\n          <p> Lastname:{props.data.lastname}</p>\n          <p> Email:{props.data.email}</p>\n        </div>\n      </center>\n\n      <div className=\"update-form\">\n        {newfirstnameErr ? (\n          <div className=\"alert alert-danger\">{newfirstnameErr}</div>\n        ) : (\n          \"\"\n        )}\n        <div>\n          <label>Firstname</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"enter firstname\"\n            onChange={(e) => {\n              setNewfirstName(e.target.value);\n            }}\n          />\n          {newlastnameErr ? (\n            <div className=\"alert alert-danger\">{newlastnameErr}</div>\n          ) : (\n            \"\"\n          )}\n          <label>Lastname</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"enter lastname\"\n            onChange={(e) => {\n              setNewLastName(e.target.value);\n            }}\n          />\n          {newemailErr ? (\n            <div className=\"alert alert-danger\">{newemailErr}</div>\n          ) : (\n            \"\"\n          )}\n          <label>Email</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            placeholder=\"enter email\"\n            onChange={(e) => {\n              setNewEmail(e.target.value);\n            }}\n          />\n          {newimageErr ? (\n            <div className=\"alert alert-danger\">{newimageErr}</div>\n          ) : (\n            \"\"\n          )}\n          <br></br>\n          <label>\n            Image\n            <input\n              className=\"form-control\"\n              type=\"file\"\n              name=\"image\"\n              id=\"image\"\n              placeholder=\"Enter your Address\"\n              onChange={(e) => {\n                setNewImage(e.target.files[0]);\n                console.log(e.target.files[0]);\n              }}\n            />\n          </label>\n          <br></br>\n          <button\n            id=\"change1\"\n            className=\"Button\"\n            onClick={() => {\n              updateInfo(props.data.id);\n            }}\n          >\n            Edit\n          </button>\n        </div>\n      </div>\n\n      <button onClick={hideModal}>Close</button>\n    </ReactModal>\n  ));\n  return (\n    <div>\n      <button id=\"change2\" onClick={showModal}>\n        Update\n      </button>\n    </div>\n  );\n};\n\nexport default Modal;\n",["286","287"],"/home/mario/Desktop/erp-project-front-end/src/Components/Employees/EmployeeInfo.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Employees/AddEmployeeModal.js",["288","289"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nconst AddEmployeeModal = (props) => {\n  // console.log(props);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [identity, setIdentity] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [employees, setEmployees] = useState([]);\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"identity\", identity);\n    data.append(\"firstname\", firstName);\n    data.append(\"lastname\", lastName);\n    data.append(\"email\", email);\n    data.append(\"image\", image);\n    data.append(\"phone\", phone);\n\n    try {\n      await Axios.post(\"http://localhost:8000/api/team\", data, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((response) => {\n        // setEmployees([...employees, {\n        //   identity: identity,\n        //   firstname: firstName,\n        //   lastname: lastName,\n        //   email: email,\n        //   image: image,\n        //   phone: phone,\n        // }]);\n        console.log(response.data);\n        console.log(employees);\n        localStorage.getItem(\"token\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n              &times;\n            </button>\n            <h4 className=\"modal-title\">Add Employee to the list</h4>\n          </div>\n          <form encType=\"multipart/form-data\">\n            <div className=\"modal-body\">\n              <label htmlFor=\"identity\" className=\"label\">\n                Identity\n              </label>\n              <input\n                type=\"text\"\n                value={identity}\n                className=\"form-control\"\n                id=\"identity\"\n                placeholder=\"Enter your personal code ....\"\n                onChange={(e) => {\n                  setIdentity(e.target.value);\n                }}\n              />\n              <label htmlFor=\"name\" className=\"label\">\n                First name:\n              </label>\n              <input\n                value={firstName}\n                className=\"form-control\"\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Enter firstname\"\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n              />\n              <label htmlFor=\"lastname\" className=\"label\">\n                Last name:\n              </label>\n              <input\n                value={lastName}\n                className=\"form-control\"\n                id=\"lastname\"\n                type=\"text\"\n                placeholder=\"Enter lastname\"\n                onChange={(e) => {\n                  setLastName(e.target.value);\n                }}\n              />\n              <label htmlFor=\"email\" className=\"label\">\n                Email\n              </label>\n              <input\n                value={email}\n                className=\"form-control\"\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n              <label htmlFor=\"image\" className=\"label\">\n                Image\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"file\"\n                name=\"image\"\n                id=\"image\"\n                onChange={(e) => {\n                  setImage(e.target.files[0]);\n                  console.log(e.target.files[0]);\n                }}\n              />\n              <label htmlFor=\"phone\" className=\"label\">\n                Phone Number\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"phone\"\n                value={phone}\n                placeholder=\"Enter Phone Number...\"\n                id=\"phone\"\n                onChange={(e) => {\n                  setPhone(e.target.value);\n                }}\n              />\n              <button\n                id=\"add-button\"\n                className=\"btn btn-lg btn-block\"\n                onClick={handleAdd}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddEmployeeModal;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/DeleteEmployee.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Employees/UpdateEmployee.js",["290"],"import { CustomDialog } from \"react-st-modal\";\nimport React from \"react\";\nimport ModalUpdate from \"./ModalUpdate\";\n\nfunction UpdateEmployee(props) {\n  return (\n    <div\n      className=\"col-md-1\"\n      style={{\n        marginTop: \"15px\",\n        transform: \"skewX(20deg)\",\n        position: \"relative\",\n        left: \"3px\"\n      }}\n    >\n      <button\n        onClick={async () => {\n          const result = await CustomDialog(\n            <ModalUpdate updateinfo={props.updateEmployee} />,\n            {\n              title: \"Update Employees Information\",\n              showCloseIcon: true,\n            }\n          );\n          \n        }}\n        className=\"update-btn\"\n      >\n        Update\n      </button>\n    </div>\n  );\n}\n\nexport default UpdateEmployee;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/ModalUpdate.js",["291"],"import { useDialog } from \"react-st-modal\";\nimport { useState } from \"react\";\nimport Axios from \"axios\";\n\n// The element to be shown in the modal window\nfunction ModalUpdate(props) {\n  // use this hook to control the dialog\n  const dialog = useDialog();\n  const [value, setValue] = useState();\n\n  const [newIdentity, setNewIdentity] = useState(\"\");\n  const [newFirstName, setNewFirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const [newImage, setNewImage] = useState(null);\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n\n  const updateInfo = async (id) => {\n    const data = new FormData();\n    data.append(\"firstname\", newFirstName);\n    data.append(\"lastname\", newLastName);\n    data.append(\"email\", newEmail);\n    data.append(\"image\", newImage);\n    data.append(\"phone\", newPhone);\n    data.append(\"identity\", newIdentity);\n\n    try {\n      await Axios.post(\n        `http://localhost:8000/api/employee/${props.updateinfo.id}?_method=PUT `,\n        data,\n        {\n          headers: {\n            \"content-type\": \"multipart/form-data\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        }\n      ).then((response) => {\n        console.log(response);\n        //setSuccessUpdate(\"Data has been updated\");\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div\n      className=\"col-md-12\"\n      style={{\n        position: \"relative\",\n        left: \"8.4vw\",\n        marginTop: \"15px\",\n      }}\n    >\n      <label className=\"updateLabel\">Identity</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Enter New Identity ...\"\n        onChange={(e) => {\n          setNewIdentity(e.target.value);\n          console.log(setNewIdentity(e.target.value));\n        }}\n      />\n      <label className=\"updateLabel\">Firstname</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Enter New Firstname ...\"\n        onChange={(e) => {\n          setNewFirstName(e.target.value);\n        }}\n      />\n      <label className=\"updateLabel\">Lastname</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Enter New lastname ...\"\n        onChange={(e) => {\n          setNewLastName(e.target.value);\n        }}\n      />\n      <label className=\"updateLabel\">Email</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Enter New Email ...\"\n        onChange={(e) => {\n          setNewEmail(e.target.value);\n        }}\n      />\n      <label className=\"updateLabel\">Image</label>\n      <input\n        className=\"form-control\"\n        type=\"file\"\n        name=\"image\"\n        id=\"image\"\n        placeholder=\"Enter New Address ...\"\n        onChange={(e) => {\n          setNewImage(e.target.files[0]);\n          console.log(e.target.files[0]);\n        }}\n      />\n      <label className=\"updateLabel\">Phone</label>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        name=\"phone\"\n        id=\"phone\"\n        placeholder=\"Enter New Phone ...\"\n        onChange={(e) => {\n          setNewPhone(e.target.value);\n        }}\n      />\n      <button\n        id=\"change1\"\n        className=\"Modal-Update-btn\"\n        onClick={() => {\n          updateInfo(props.updateinfo);\n        }}\n      >\n        Update\n      </button>\n      <button\n        onClick={() => {\n          // Сlose the dialog and return the value\n          dialog.close(value);\n        }}\n        className=\"Modal-Update-close-btn\"\n      >\n        Close\n      </button>\n    </div>\n  );\n}\n\nexport default ModalUpdate;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/ViewEmployee.js",["292"],"import React from 'react'\nimport { CustomDialog} from \"react-st-modal\";\nimport ViewModal from './ViewModal';\n\nconst ViewEmployee = (props) => {\n    return (\n        <div className=\"col-md-1\" style={{marginTop:\"15px\" , transform:\"skewX(20deg)\"}}>\n        <button\n          onClick={async () => {\n            const result = await CustomDialog(\n              <ViewModal employee = {props.viewEmp}/>,\n              {\n                title: \"View Employee Info\",\n                showCloseIcon: true,\n              }\n            );\n          }}\n          className = \"view-btn\"\n          style={{\n            position: \"relative\",\n            left: \"12px\",\n            backgroundColor:\"#FFFFCC\"\n          }}\n        >\n         View\n        </button>\n      </div>\n    )\n}\n\nexport default ViewEmployee\n\n\n\n","/home/mario/Desktop/erp-project-front-end/src/Components/SideNav/Sidenav.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Pagination/Pagination.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Employees/ViewModal.js",["293"],"import { useDialog } from \"react-st-modal\";\nimport { useState } from \"react\";\n\nimport React from \"react\";\n\nconst ViewModal = (props) => {\n  // use this hook to control the dialog\n  // console.log(props.employee&&props.employee.teams.name);\n\n  const dialog = useDialog();\n  const [value, setValue] = useState();\n  return (\n    <div>\n      <p\n        style={{\n          color: \"black\",\n          textAlign: \"center\",\n          marginTop: \"3vw\",\n          lineHeight: \"1.2\",\n        }}\n      >\n        <span>\n          <img\n            className=\"user-image-info\"\n            src={`http://localhost:8000/storage/${props.employee.image}`}\n            alt=\"error\"\n          />\n        </span>\n        <br />\n        <span>\n          <strong>Identity :</strong>\n          <br />\n          {props.employee.identity}\n        </span>\n        <br />\n        <span>\n          <strong>FirstName :</strong> <br />\n          {props.employee.firstname}\n        </span>\n        <br />\n        <span>\n          <strong>LastName :</strong> <br />\n          {props.employee.lastname}\n        </span>\n        <br />\n        <span>\n          <strong>Email :</strong> <br />\n          {props.employee.email}\n        </span>\n        <br />\n        <span>\n          <strong>Phone Number :</strong> <br />\n          {props.employee.phone}\n        </span>\n        <br />\n        <span>\n          <strong>\n            {props.employee &&\n              props.employee.teams &&\n              props.employee.teams.name}\n          </strong>\n        </span>\n      </p>\n      <button\n        onClick={() => {\n          // Сlose the dialog and return the value\n          dialog.close(value);\n        }}\n        className=\"View_close_btn\"\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default ViewModal;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/KPI.js",["294"],"import React from \"react\";\nimport { CustomDialog } from \"react-st-modal\";\nimport KPIModal from \"./KPIModal\";\n\nconst KPI = (props) => {\n  console.log(props.kpiEmployee);\n  return (\n    <div\n      className=\"col-md-1\"\n      style={{\n        marginTop: \"15px\",\n        transform: \"skewX(20deg)\",\n        marginLeft: \"-7px\",\n      }}\n    >\n      <button\n        onClick={async () => {\n          const result = await CustomDialog(\n            <KPIModal modalKpi={props.kpiEmployee} />,\n            {\n              title: \"KPI lists\",\n              showCloseIcon: true,\n            }\n          );\n        }}\n        className=\"KPI_button\"\n        style={{\n          position: \"relative\",\n          left: \"7px\",\n        }}\n      >\n        KPI\n      </button>\n    </div>\n  );\n};\n\nexport default KPI;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/KPIModal.js",["295","296","297","298"],"import React from \"react\";\nimport { useDialog } from \"react-st-modal\";\nimport { useState, useEffect } from \"react\";\nimport Charts from \"./Charts\";\nimport Axios from \"axios\";\nimport Chart from \"./Charts\";\n\nconst KPIModal = (props) => {\n  // use this hook to control the dialog\n  //  console.log(props.modalKpi.kpis);\n\n  const dialog = useDialog();\n  const [value, setValue] = useState();\n\n  const [name, setName] = useState(\"\");\n  const [kpiValue, setKpiValue] = useState(1);\n\n  const [kpi, setKpi] = useState(props.modalKpi.kpis);\n\n  const creatKpi = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"name\", name);\n    data.append(\"value\", kpiValue);\n    data.append(\"employees_id\", props.modalKpi.id);\n\n    try {\n      await Axios.post(\"http://localhost:8000/api/kpi\", data, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((response) => {\n        console.log(response.data);\n        localStorage.getItem(\"token\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <form>\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n        <label for=\"value\" style={{ color: \"black\" }}>\n          Choose a Value:\n        </label>\n        <select\n          id=\"value\"\n          name=\"value\"\n          onChange={(e) => {\n            setKpiValue(e.target.value);\n          }}\n        >\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n        </select>\n      </form>\n      <button className=\"Modal-Update-btn\" onClick={creatKpi}>\n        Creat\n      </button>\n      {kpi.map((val) => {\n        return (\n          <div>\n            <Chart value={val.value} name={val.name} />\n          </div>\n        );\n      })}\n      <button\n        onClick={() => {\n          // Сlose the dialog and return the value\n          dialog.close(value);\n        }}\n        className=\"Modal-Update-close-btn\"\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default KPIModal;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/EmployeeInfoEven.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Employees/DeleteEmployeeEven.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Admins/Admins.js",["299","300","301","302","303"],"import Axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport Sidenav from \"../SideNav/Sidenav\";\nimport Pagination from \"../Pagination/Pagination\";\nimport AddAdmin from \"./AddAdminModal\";\nimport AdminInfo from \"./AdminInfo\";\nimport AdminInfoEven from \"./AdminInfoEven\";\n\nimport {dataContext} from \"../Context/Context\";\nimport {useContext} from \"react\";\n\n\n\nconst Admins = () => {\n  const [search, setSearch] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n\n  const {users, setUsers} = useContext(dataContext);\n  const [render, setRender] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(6);\n  \n  const {name , setName} = useContext(dataContext);\n  // console.log(name);\n\n  const numOfAdmins = users.length;\n\n\n  useEffect(() => {\n    setFilteredData(\n      users.filter(\n        (user) =>\n          user.firstname.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, users, render]);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredData.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  console.log(\"currentPosts: \", currentPosts);\n\n  return (\n    <div className=\"container container-xs\">\n      <Sidenav />\n\n      <div className=\"container\">\n        <div className=\"row header\">\n          <div className=\"col-md-2 col-sm-2\">\n            <button\n              type=\"button\"\n              id=\"change1\"\n              className=\"btn  btn-md\"\n              data-toggle=\"modal\"\n              data-target=\"#myModal\"\n            >\n              Add Admin\n            </button>\n          </div>\n          <div className=\"col-md-8 col-sm-6\">\n            <form className=\"search\">\n              <input\n                value={search}\n                placeholder=\"Find Admins...\"\n                type=\"text\"\n                name=\"\"\n                className=\"search__field\"\n                onChange={(e) => {\n                  setSearch(e.target.value);\n                }}\n              />\n            </form>\n          </div>\n          <div className=\"col-md-2 profile_admin\">\n            <div className=\"username-section\">\n              <img\n                className=\"user-image\"\n                src={`http://localhost:8000/storage/${localStorage.getItem(\n                  \"image\"\n                )}`}\n                alt=\"error\"\n              />\n            </div>\n            <div className=\"admin_name\">\n              <span>{localStorage.getItem(\"username\")}</span>\n            </div>\n          </div>\n        </div>\n        <h1>\n          Number of Admins is{\"  \"}\n          <span className=\"badge badge-secondary\">{numOfAdmins}</span>\n        </h1>\n\n        <div className=\"sections\">\n          {filteredData.length === 0 ? (\n            <div className=\"no_result\">No result found!</div>\n          ) : (\n            currentPosts.map((arr, index) => {\n              if (index % 2 === 0) {\n                return <AdminInfo key={arr.id} admin={arr} />;\n              } else {\n                return <AdminInfoEven key={arr.id} admin={arr} />;\n              }\n            })\n          )}\n        </div>\n        <AddAdmin props={{ setRender }} />\n        <div className=\"row\">\n          <div className=\"col-md-3\"></div>\n          <div className=\"col-md-6\" style={{ textAlign: \"center\" }}>\n            <Pagination\n              paginate={paginate}\n              postsPerPage={postsPerPage}\n              totalPosts={filteredData.length}\n            />\n          </div>\n          <div className=\"col-md-3\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Admins;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/AddAdminModal.js",["304"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nconst AddAdminModal = ({ props }) => {\n  // console.log(props);\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const { setRender } = props;\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"firstname\", firstName);\n    data.append(\"lastname\", lastName);\n    data.append(\"email\", email);\n    data.append(\"image\", image);\n    data.append(\"username\", userName);\n    data.append(\"password\", password);\n    try {\n      await Axios.post(\"http://localhost:8000/api/register\", data, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((response) => {\n        console.log(response.data);\n        localStorage.getItem(\"token\");\n        setRender((prev) => !prev);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content modal-content-admin\">\n          <div className=\"modal-header\">\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n              &times;\n            </button>\n            <h4 className=\"modal-title\">Add an Admin to the list</h4>\n          </div>\n          <form encType=\"multipart/form-data\">\n            <div className=\"modal-body\">\n              <label htmlFor=\"name\" className=\"label-admin\">\n                First name:\n              </label>\n              <input\n                value={firstName}\n                className=\"form-control\"\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Enter firstname\"\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n              />\n              <label htmlFor=\"lastname\" className=\"label-admin\">\n                Last name:\n              </label>\n              <input\n                value={lastName}\n                className=\"form-control\"\n                id=\"lastname\"\n                type=\"text\"\n                placeholder=\"Enter lastname\"\n                onChange={(e) => {\n                  setLastName(e.target.value);\n                }}\n              />\n              <label htmlFor=\"email\" className=\"label-admin\">\n                Email\n              </label>\n              <input\n                value={email}\n                className=\"form-control\"\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n              <label htmlFor=\"image\" className=\"label-admin\">\n                Image\n              </label>\n              <input\n                className=\"form-control\"\n                type=\"file\"\n                name=\"image\"\n                id=\"image\"\n                onChange={(e) => {\n                  setImage(e.target.files[0]);\n                  console.log(e.target.files[0]);\n                }}\n              />\n              <label htmlFor=\"username\" className=\"label-admin\">\n                Username:\n              </label>\n              <input\n                value={userName}\n                className=\"form-control\"\n                id=\"username\"\n                type=\"text\"\n                placeholder=\"Enter username\"\n                onChange={(e) => {\n                  setUserName(e.target.value);\n                }}\n              />\n              <label htmlFor=\"password\" className=\"label-admin\">\n                Password:\n              </label>\n              <input\n                value={password}\n                className=\"form-control\"\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"Enter password\"\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n              />\n              <button\n                id=\"add-button\"\n                className=\"btn btn-lg btn-block\"\n                onClick={handleAdd}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddAdminModal;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/AdminInfo.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Admins/AdminInfoEven.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Admins/ViewAdmin.js",["305"],"import React from \"react\";\nimport { CustomDialog } from \"react-st-modal\";\nimport ViewModal from \"./ViewModal\";\n\nconst ViewAdmin = (props) => {\n  return (\n    <div\n      className=\"col-md-1\"\n      style={{ marginTop: \"15px\", transform: \"skewX(20deg)\"  }}\n    >\n      <button\n        onClick={async () => {\n          const result = await CustomDialog(\n            <ViewModal admin={props.viewAdm} />,\n            {\n              title: \"View Admin Info\",\n              showCloseIcon: true,\n            }\n          );\n        }}\n        className=\"view-btn\"\n      >\n        View\n      </button>\n    </div>\n  );\n};\n\nexport default ViewAdmin;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/ViewModal.js",["306"],"import { useDialog } from \"react-st-modal\";\nimport { useState } from \"react\";\n\nimport React from \"react\";\n\nconst ViewModal = (props) => {\n  // use this hook to control the dialog\n  const dialog = useDialog();\n  const [value, setValue] = useState();\n  return (\n    <div>\n      <p style={{ color: \"black\", textAlign: \"center\" , marginTop:\"3vw\" , lineHeight:\"1.2\" }}>\n        <span>\n          <img\n            className=\"user-image-info\"\n            src={`http://localhost:8000/storage/${props.admin.image}`}\n            alt=\"error\"\n          />\n        </span>\n        <br />\n        <span>\n          <strong>FirstName :</strong>\n          <br />\n          {props.admin.firstname}\n        </span>\n        <br />\n        <span>\n          <strong>LastName :</strong> <br />\n          {props.admin.lastname}\n        </span>\n        <br />\n        <span>\n          <strong>Email :</strong> <br />\n          {props.admin.email}\n        </span>\n        <br />\n        <span>\n          <strong>UserName :</strong> <br />\n          {props.admin.username}\n        </span>\n      </p>\n      <button\n        onClick={() => {\n          // Сlose the dialog and return the value\n          dialog.close(value);\n        }}\n        className=\"View_close_btn\"\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default ViewModal;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/UpdateAdmin.js",["307"],"import { CustomDialog } from \"react-st-modal\";\nimport React from \"react\";\nimport ModalUpdate from \"./ModalUpdate\";\n\nfunction UpdateAdmin(props) {\n  return (\n    <div\n      className=\"col-md-1\"\n      style={{\n        marginTop: \"15px\",\n        transform: \"skewX(20deg)\",\n        position: \"relative\",\n        left: \"-11px\",\n      }}\n    >\n      <button\n        onClick={async () => {\n          const result = await CustomDialog(\n            <ModalUpdate updateinfo={props.updateAdmin} />,\n            {\n              title: \"Update Admins Information\",\n              showCloseIcon: true,\n            }\n          );\n        }}\n        className=\"update-btn\"\n      >\n        Update\n      </button>\n    </div>\n  );\n}\n\nexport default UpdateAdmin;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/ModalUpdate.js",["308"],"import {useDialog } from \"react-st-modal\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n// The element to be shown in the modal window\nfunction ModalUpdate(props) {\n  // use this hook to control the dialog\n  const dialog = useDialog();\n  const [value, setValue] = useState();\n\n  const [newfirstName, setNewfirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newImage, setNewImage] = useState(\"\");\n\n\n  const updateInfo = async (id) => {\n      const data = new FormData();\n      data.append(\"firstname\", newfirstName);\n      data.append(\"lastname\", newLastName);\n      data.append(\"email\", newEmail);\n      data.append(\"image\", newImage);\n\n      try {\n        await Axios.post(\n          `http://localhost:8000/api/users/${props.updateinfo.id}?_method=PUT `,\n          data,\n          {\n            headers: {\n              \"content-type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          }\n        ).then((response) => {\n          console.log(response);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    \n    if (!localStorage.getItem(\"token\")) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n  return (\n    <div\n      className=\"col-md-12\"\n      style = {{\n        position: \"relative\",\n        left: \"8.4vw\",\n        marginTop:\"15px\",\n        top : \"1vw\"\n    }}\n    >\n      <label className=\"updateLabel\">FirstName</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Enter New FirstName ...\"\n        onChange={(e) => {\n          setNewfirstName(e.target.value);\n        }}\n      />\n      <label className=\"updateLabel\">LastName</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Enter New LastName ...\"\n        onChange={(e) => {\n          setNewLastName(e.target.value);\n        }}\n      />\n      <label className=\"updateLabel\">Email</label>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Enter New Email ...\"\n        onChange={(e) => {\n          setNewEmail(e.target.value);\n        }}\n      />\n      <label className=\"updateLabel\">Image</label>\n      <input\n        className=\"form-control\"\n        type=\"file\"\n        name=\"image\"\n        id=\"image\"\n        placeholder=\"Enter New Address ...\"\n        onChange={(e) => {\n          setNewImage(e.target.files[0]);\n          console.log(e.target.files[0]);\n        }}\n      />\n      <button\n        id=\"change1\"\n        className=\"Modal-Update-btn\"\n        onClick={() => {\n          updateInfo(props.updateinfo);\n        }}\n      >\n        Update\n      </button>\n      <button\n        onClick={() => {\n          // Сlose the dialog and return the value\n          dialog.close(value);\n        }}\n        className=\"Modal-Update-close-btn-Admin\"\n      >\n        Close\n      </button>\n    </div>\n  );\n}\n\nexport default ModalUpdate;\n\n\n\n\n\n\n","/home/mario/Desktop/erp-project-front-end/src/Components/Admins/DeleteAdmin.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Admins/DeleteAdminEven.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Login/Login.js",["309"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./Login.css\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [authErr, setAuthErr] = useState(\"\");\n  const [passErr, setPassErr] = useState(\"\");\n  const [usernameErr, setUsernameErr] = useState(\"\");\n  const [isPassShown, setIsPassShown] = useState(false);\n\n  const toggleVisibility = () => {\n    setIsPassShown(!isPassShown);\n  };\n\n  const HandleLogin = async (e) => {\n    e.preventDefault();\n    if (!username && !password) {\n      setUsernameErr(\"Username is invalid!\");\n      setPassErr(\"Password is invalid!\");\n      setAuthErr(\"\");\n    } else if (username && !password) {\n      setUsernameErr(\"\");\n      setPassErr(\"Password is invalid\");\n      setAuthErr(\"\");\n    } else if (!username && password) {\n      setPassErr(\"\");\n      setUsernameErr(\"Username is invalid!\");\n      setAuthErr(\"\");\n    } else if (password.length < 6) {\n      setPassErr(\"Password must containt at least 6 characters!\");\n      setAuthErr(\"\");\n      setUsernameErr(\"\");\n    } else if (username.length < 5) {\n      setUsernameErr(\"Username must containt at least 5 characters!\");\n      setAuthErr(\"\");\n      setPassErr(\"\");\n    } else if (username.length < 5 && password.length < 6) {\n      setUsernameErr(\"Username must containt at least 5 characters!\");\n      setPassErr(\"Password must containt at least 6 characters!\");\n      setAuthErr(\"\");\n    } else {\n      try {\n        await Axios.post(\"http://localhost:8000/api/login\", {\n          username: username,\n          password: password,\n        }).then((response) => {\n          setAuthErr(response.data.error + \" Username or Password\");\n          setUsernameErr(\"\");\n          setPassErr(\"\");\n          setToken(response.data.access_token);\n          {\n            localStorage.setItem(\"image\", response.data.user.image);\n            localStorage.setItem(\"id\", response.data.user.id);\n            localStorage.setItem(\"username\", response.data.user.username);\n            response &&\n              response.data &&\n              response.data.access_token &&\n              localStorage.setItem(\"token\", response.data.access_token);\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"login\">\n        <div className=\"login_block\">\n          <form\n            className=\"login-form\"\n            style={{ width: \"40%\", margin: \"8% auto\" }}\n          >\n            <div className=\"form-group\">\n              <p>\n                {authErr ? (\n                  <span class=\"error_msg\">\n                    {authErr}\n                    {\"\\t\"}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </p>\n              <label className=\"login-label\" htmlFor=\"exampleInputEmail1\">\n                Username\n              </label>\n              <p>\n                {usernameErr ? (\n                  <span class=\"error_msg\">\n                    {usernameErr}\n                    {\"\\t\"}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </p>\n              <input\n                type=\"text\"\n                value={username}\n                className=\"form-control-login\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Username\"\n                onChange={(e) => {\n                  setUsername(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"login-label\" htmlFor=\"exampleInputPassword1\">\n                Password\n              </label>\n              <br />\n              {passErr ? <span class=\"error_msg\">{passErr}</span> : \"\"}\n              <div className=\"eye\">\n                <input\n                  type={isPassShown ? \"text\" : \"password\"}\n                  value={password}\n                  className=\"form-control-login\"\n                  id=\"exampleInputPassword1\"\n                  placeholder=\"Password\"\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                />{\" \"}\n                <i\n                  id=\"fa1\"\n                  className=\"fa fa-eye password-icon\"\n                  onClick={toggleVisibility}\n                />\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn\" onClick={HandleLogin}>\n              <span className=\"submit\"> Submit</span>\n            </button>\n          </form>\n          {token ? <Redirect exact to=\"/Admins\" /> : <Redirect exact to=\"/\" />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/Charts.js",["310","311","312","313"],"import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst Chart = (props) => {\n  const [value, setValue] = useState([]);\n\n  const data = [\n    {\n      from: props.date,\n      value: props.value,\n    },\n    // {\n    //   from: \"2019-05-21\",\n    //   to: \"2019-05-21\",\n    //   bookings: 50,\n    //   revenue: 129800,\n    //   costs: 14400,\n    // },\n    // {\n    //   from: \"2019-05-22\",\n    //   to: \"2019-05-22\",\n    //   bookings: 80,\n    //   revenue: 120000,\n    //   costs: 14400,\n    // },\n    // {\n    //   from: \"2019-05-23\",\n    //   to: \"2019-05-23\",\n    //   bookings: 30,\n    //   revenue: 120000,\n    //   costs: 14400,\n    // },\n    // {\n    //   from: \"2019-05-24\",\n    //   to: \"2019-05-24\",\n    //   bookings: 50,\n    //   revenue: 120000,\n    //   costs: 14400,\n    // },\n  ];\n\n  //Need to add active color for chosen category\n\n  let xAxisLabels = [];\n  let isVisible = false;\n\n  data.map((item) => {\n    const options = { month: \"short\", day: \"numeric\" };\n    const fromDate = new Date(item.from).toLocaleDateString(\"de-DE\", options);\n    const toDate = new Date(item.to).toLocaleDateString(\"de-DE\", options);\n\n    return (\n      //   bookings.push(item.bookings),\n      //   revenue.push(item.revenue),\n      //   costs.push(item.costs),\n      value.push(item.value), xAxisLabels.push(`${fromDate} - ${toDate}`)\n    );\n  });\n\n  const options = {\n    title: {\n      text: props.name,\n    },\n    series: [\n      {\n        name: \"value\",\n        data: value,\n        color: \"#7fbfd6\",\n      },\n      //   {\n      //     name: \"Revenue\",\n      //     data: revenue,\n      //     visible: isVisible,\n      //     color: \"#000\",\n      //   },\n      //   {\n      //     name: \"Costs\",\n      //     data: costs,\n      //     visible: false,\n      //     color: \"#000\",\n      //   },\n    ],\n    chart: {\n      type: \"spline\",\n    },\n    yAxis: {\n      lineWidth: 1,\n      lineColor: \"#9BA2A6\",\n      gridLineColor: \"#ebeced\",\n      title: {\n        text: null,\n      },\n      labels: {\n        style: {\n          color: \"#9BA2A6\",\n          fontSize: \"10px\",\n        },\n      },\n    },\n    xAxis: {\n      categories: xAxisLabels,\n      crosshair: {\n        color: \"rgba(243,244,245,.5)\",\n        dashStyle: \"solid\",\n      },\n      lineWidth: 1,\n      lineColor: \"#9BA2A6\",\n      gridLineWidth: 1,\n      gridLineColor: \"#ebeced\",\n      labels: {\n        style: {\n          color: \"#9BA2A6\",\n          fontSize: \"10px\",\n        },\n      },\n    },\n    legend: {\n      enabled: false,\n    },\n    credits: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        color: \"#7fbfd6\",\n        marker: {\n          states: {\n            hover: {\n              fillColor: \"#007fad\",\n            },\n          },\n        },\n      },\n    },\n    tooltip: {\n      padding: 10,\n      style: {\n        fontSize: \"12px\",\n        lineHeight: \"20px\",\n      },\n      shape: \"square\", // removes arrow on tooltip\n      backgroundColor: \"#fff\",\n      formatter: function () {\n        var series = this.series.chart.series,\n          x = this.x,\n          each = Highcharts.each,\n          txt = '<span\"><b>' + this.key + \"</b></span><br/>\";\n\n        each(series, function (serie, i) {\n          each(serie.data, function (data, j) {\n            if (data.category === x) {\n              txt +=\n                '<span style=\"color:' +\n                data.series.color +\n                '\">' +\n                data.series.name +\n                \": \" +\n                data.y +\n                \"</span><br/>\";\n            }\n          });\n        });\n\n        return txt;\n      },\n    },\n  };\n  return (\n    <div>\n      <HighchartsReact Highcharts={Highcharts} options={options} />\n    </div>\n  );\n};\n\nexport default Chart;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/Teams.js",["314","315","316","317"],"import Axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport TeamInfo from \"./TeamInfo\";\nimport Sidenav from \"../SideNav/Sidenav\";\nimport Pagination from \"../Pagination/Pagination\";\nimport AddTeam from \"./AddTeamModal\";\nimport TeamInfoEven from \"./TeamInfoEven\";\nimport { useContext } from \"react\";\nimport dataContext from \"../Context/Context\";\n\nconst Teams = () => {\n  const [filteredData, setFilteredData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(6);\n  const [render, setRender] = useState(false);\n\n  const { listTeam, setListTeam } = useContext(dataContext);\n\n  const numOfTeams = listTeam.length;\n\n  useEffect(() => {\n    setFilteredData(\n      listTeam.filter((team) =>\n        team.name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, listTeam]);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = filteredData.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  console.log(\"currentPosts: \", currentPosts);\n\n  return (\n    <div className=\"container container-xs\">\n      <Sidenav />\n      <div className=\"container\">\n        <div className=\"row header\">\n          <div className=\"col-md-2 col-sm-2\">\n            <button\n              type=\"button\"\n              id=\"change1\"\n              className=\"btn  btn-md\"\n              data-toggle=\"modal\"\n              data-target=\"#myModal\"\n            >\n              Add Team\n            </button>\n          </div>\n          <div className=\"col-md-8 col-sm-6\">\n            <form className=\"search\">\n              <input\n                value={search}\n                placeholder=\"Find Teams...\"\n                type=\"text\"\n                name=\"\"\n                className=\"search__field\"\n                onChange={(e) => {\n                  setSearch(e.target.value);\n                }}\n              />\n            </form>\n          </div>\n          <div className=\"col-md-2 profile_admin\">\n            <div className=\"username-section\">\n              <img\n                className=\"user-image\"\n                src={`http://localhost:8000/storage/${localStorage.getItem(\n                  \"image\"\n                )}`}\n                alt=\"error\"\n              />\n            </div>\n            <div className=\"admin_name\">\n              <span>{localStorage.getItem(\"username\")}</span>\n            </div>\n          </div>\n        </div>\n        <h1>\n          Number of Teams is{\"  \"}\n          <span className=\"badge\">\n            <span className=\"badge-secondary\">{numOfTeams}</span>\n          </span>\n        </h1>\n        <div className=\"sections\">\n          {filteredData.length === 0 ? (\n            <div className=\"no_result\">No result found!</div>\n          ) : (\n            currentPosts.map((arr, index) => {\n              if (index % 2 === 0) {\n                return <TeamInfo key={arr.id} team={arr} />;\n              } else {\n                return <TeamInfoEven key={arr.id} team={arr} />;\n              }\n            })\n          )}\n        </div>\n        <AddTeam props={{ setRender }} />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-3\"></div>\n        <div className=\"col-md-6\" style={{ textAlign: \"center\" }}>\n          <Pagination\n            paginate={paginate}\n            postsPerPage={postsPerPage}\n            totalPosts={filteredData.length}\n          />\n        </div>\n        <div className=\"col-md-3\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Teams;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/TeamInfo.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Teams/TeamInfoEven.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Teams/DeleteTeam.js",["318","319","320","321"],"import React from \"react\";\nimport Axios from \"axios\";\nimport { useState } from \"react\";\n\nconst DeleteTeam = (props) => {\n  const [team, setteam] = useState(\"\");\n  const [deleteList, setDeleteList] = useState(props.deleteTeam.employees);\n  const [deleteItemErr, setDeleteItemErr] = useState(\"\");\n\n  const deleteItem = async (id) => {\n    try {\n      await Axios.delete(`http://localhost:8000/api/team/${id} `, {\n        headers: {\n          Accept: \"application/json\",\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((data) => {\n        if (data.status === 200) {\n          console.log(data);\n          alert(\"Deleted!\");\n          // const newData = team.filter((item) => item.id !== id);\n          // console.log(props.deleteTeam&&props.deleteTeam.employees);\n          // setteam(newData);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <div\n      className=\"col-md-1\"\n      style={{ marginTop: \"15px\", marginLeft: \"-16px\" }}\n    >\n      {deleteList.length > 0 ? (\n        <button\n          className=\"Button Button_delete  Button_delete_Admin Button_delete_Skew_Admin\"\n          id=\"change\"\n          disabled={true}\n          onClick={() => {\n            setDeleteItemErr(\n              \"You Can Not Delete A Team That Contain A Project\"\n            );\n          }}\n        >\n          <span> Delete</span>\n        </button>\n      ) : (\n        <button\n          className=\"Button Button_delete  Button_delete_Admin Button_delete_Skew_Admin\"\n          id=\"change\"\n          onClick={() => {\n            deleteItem(props.deleteTeam.id);\n          }}\n        >\n          <span>Delete</span>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default DeleteTeam;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/DeleteTeamEven.js",["322","323"],"import React from \"react\";\nimport Axios from 'axios';\nimport {useState} from 'react';\n\n\nconst DeleteTeam = (props) => {\n\n    const [users , setUsers] = useState(\"\");\n\n    const [deleteList, setDeleteList] = useState(props.deleteTeam.employees);\n    const [deleteItemErr, setDeleteItemErr] = useState(\"\");\n\n    const deleteItem = async (id) => {\n        try {\n          await Axios.delete(`http://localhost:8000/api/team/${id} `, {\n            headers: {\n              Accept: \"application/json\",\n              \"content-type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          }).then((data) => {\n            if (data.status === 200) {\n              console.log(data);\n              // alert(\"Deleted!\");\n              const newData = users.filter((item) => item.id !== id);\n              setUsers(newData);\n            }\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      };\n  return (\n    <div className=\"col-md-1\" style = {{marginTop: \"15px\" , marginLeft: \"-16px\"}}>\n      {deleteList.length > 0 ? (\n        <button\n          className=\"Button Button_delete_Admin_Even Button_delete_Skew_Admin_Even\"\n          id=\"change\"\n          disabled={true}\n          onClick={() => {\n            setDeleteItemErr(\n              \"You Can Not Delete A Team That Contain A Project\"\n            );\n          }}\n        >\n          <span> Delete</span>\n        </button>\n      ) : (\n        <button\n          className=\"Button Button_delete_Admin_Even Button_delete_Skew_Admin_Even\"\n          id=\"change\"\n          onClick={() => {\n            deleteItem(props.deleteTeam.id);\n          }}\n        >\n          <span> Delete</span>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default DeleteTeam;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/AddTeamModal.js",["324","325"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nimport \"./Teams.css\";\n\nconst AddTeam = ({ props }) => {\n  // console.log(props);\n  const [teamName, setTeamName] = useState(\"\");\n  const { setRender } = props;\n\n  const [employees, setEmployees] = useState([]);\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"name\", teamName);\n\n    try {\n      await Axios.post(\"http://localhost:8000/api/team\", data, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((response) => {\n        console.log(response.data);\n        console.log(employees);\n        localStorage.getItem(\"token\");\n        setRender((prev) => !prev);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\n      <div className=\"modal-dialog modal-lg\">\n        <div className=\"modal-content modal-content-team\">\n          <div className=\"modal-header\">\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n              &times;\n            </button>\n            <h4 className=\"modal-title\">Add Team to the list</h4>\n          </div>\n          <form encType=\"multipart/form-data\">\n            <div className=\"modal-body\">\n              <label htmlFor=\"team\" className=\"label\">\n                Name\n              </label>\n              <input\n                type=\"text\"\n                value={teamName}\n                className=\"form-control\"\n                id=\"team\"\n                placeholder=\"Enter Team Name ....\"\n                onChange={(e) => {\n                  setTeamName(e.target.value);\n                }}\n              />\n              <button\n                id=\"add-button\"\n                className=\"btn btn-lg btn-block\"\n                onClick={handleAdd}\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default\"\n              data-dismiss=\"modal\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTeam;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/ViewTeam.js",["326"],"import React from \"react\";\nimport { CustomDialog } from \"react-st-modal\";\nimport ViewModal from \"./ViewModal\";\n\n\nconst ViewTeam = (props) => {\n  \n  return (\n    <div\n      className=\"col-md-1\"\n      style={{ marginTop: \"15px\", transform: \"skewX(20deg)\" }}\n    >\n      <button\n        onClick={async () => {\n          const result = await CustomDialog(\n            <ViewModal viewModal={props.viewTeam} />,\n            {\n              title: \"View Team Info\",\n              showCloseIcon: true,\n            }\n          );\n        }}\n        className=\"view-btn\"\n        style={{\n          position: \"relative\",\n          left: \"10px\"\n        }}\n      >\n        View\n      </button>\n    </div>\n  );\n};\n\nexport default ViewTeam;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Teams/ViewModal.js",["327","328"],"import { useDialog } from \"react-st-modal\";\nimport { useState } from \"react\";\nimport React from \"react\";\n\nconst ViewModal = (props) => {\n  // use this hook to control the dialog\n  console.log(props.viewModal && props.viewModal.employees);\n  const dialog = useDialog();\n  const [value, setValue] = useState();\n  const [viewModal, setViewModal] = useState(props.viewModal.employees);\n\n  return (\n    <div>\n      <strong\n        style={{\n          position: \"relative\",\n          left: \"42%\",\n          top: \"1vw\",\n          fontSize: \"30px\",\n        }}\n      >\n        {props.viewModal.name}\n      </strong>\n      {viewModal.map((val) => {\n        return (\n          <p\n            style={{\n              color: \"black\",\n              textAlign: \"center\",\n              marginTop: \"3vw\",\n              lineHeight: \"1.2\",\n            }}\n            key={val.id}\n          >\n            <span>\n              <img\n                className=\"user-image-info\"\n                src={`http://localhost:8000/storage/${val.image}`}\n                alt=\"error\"\n              />\n              <br />\n              {val.firstname}\n            </span>\n            <br />\n          </p>\n        );\n      })}\n\n      <button\n        onClick={() => {\n          // Сlose the dialog and return the value\n          dialog.close(value);\n        }}\n        className=\"View_close_btn\"\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default ViewModal;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/AssignTo.js",["329"],"import React from \"react\";\nimport { CustomDialog } from \"react-st-modal\";\nimport AssignToModal from \"./AssignToModal\";\n\nconst AssignTo = (props) => {\n  // console.log(props.assignTo)\n  return (\n    <div\n      className=\"col-md-1\"\n      style={{ marginTop: \"15px\", transform: \"skewX(20deg)\" }}\n    >\n      <button\n        onClick={async () => {\n          const result = await CustomDialog(\n            <AssignToModal assignModal={props.assignTo} />,\n            {\n              title: \"Assign Employee To A Project\",\n              showCloseIcon: true,\n            }\n          );\n        }}\n        className=\"view-btn\"\n        style={{\n          position: \"relative\",\n          right: \"5px\",\n        }}\n      >\n        AssignTo\n      </button>\n    </div>\n  );\n};\n\nexport default AssignTo;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Employees/AssignToModal.js",["330"],"/home/mario/Desktop/erp-project-front-end/src/Components/Projects/Projects.js",["331","332","333","334"],"/home/mario/Desktop/erp-project-front-end/src/Components/Projects/AddProjects.js",["335","336","337","338","339","340","341"],"/home/mario/Desktop/erp-project-front-end/src/Components/Context/Context.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Projects/ProjectInfo.js",[],"/home/mario/Desktop/erp-project-front-end/src/Components/Projects/ViewProject.js",["342"],"import React from 'react'\nimport { CustomDialog} from \"react-st-modal\";\nimport ViewModal from './ViewModal';\n\nconst ViewProject = (props) => {\n    return (\n        <div className=\"col-md-1\" style={{marginTop:\"15px\" , transform:\"skewX(20deg)\"}}>\n        <button\n          onClick={async () => {\n            const result = await CustomDialog(\n              <ViewModal/>,\n              {\n                title: \"View Project Info\",\n                showCloseIcon: true,\n              }\n            );\n          }}\n          className = \"view-btn\"\n          style={{\n            position: \"relative\",\n            left: \"12px\",\n            backgroundColor:\"#FFFFCC\"\n          }}\n        >\n         View\n        </button>\n      </div>\n    )\n}\n\nexport default ViewProject\n\n\n\n","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/ViewModal.js",["343"],"import { useDialog } from \"react-st-modal\";\nimport { useState } from \"react\";\n\nimport React from \"react\";\n\nconst ViewModal = (props) => {\n  // use this hook to control the dialog\n  // console.log(props.employee&&props.employee.teams.name);\n\n  const dialog = useDialog();\n  const [value, setValue] = useState();\n  return (\n    <div>\n      <p>\n       skhsjsk\n      </p>\n      <button\n        onClick={() => {\n          // Сlose the dialog and return the value\n          dialog.close(value);\n        }}\n        className=\"View_close_btn\"\n      >\n        Close\n      </button>\n    </div>\n  );\n};\n\nexport default ViewModal;\n","/home/mario/Desktop/erp-project-front-end/src/Components/Projects/AddProjectsEmployee.js",[],["344","345"],"/home/mario/Desktop/erp-project-front-end/src/Components/Projects/AssignEmployee.js",["346"],"/home/mario/Desktop/erp-project-front-end/src/Components/Projects/AssignToModal.js",["347","348","349"],{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","severity":1,"message":"355","line":56,"column":11,"nodeType":"356","messageId":"357","endLine":64,"endColumn":12},{"ruleId":"358","severity":1,"message":"359","line":40,"column":24,"nodeType":"360","messageId":"361","endLine":40,"endColumn":39},{"ruleId":"350","replacedBy":"362"},{"ruleId":"352","replacedBy":"363"},{"ruleId":"350","replacedBy":"364"},{"ruleId":"352","replacedBy":"365"},{"ruleId":"358","severity":1,"message":"366","line":1,"column":8,"nodeType":"360","messageId":"361","endLine":1,"endColumn":13},{"ruleId":"358","severity":1,"message":"367","line":4,"column":10,"nodeType":"360","messageId":"361","endLine":4,"endColumn":18},{"ruleId":"358","severity":1,"message":"359","line":18,"column":24,"nodeType":"360","messageId":"361","endLine":18,"endColumn":39},{"ruleId":"358","severity":1,"message":"368","line":20,"column":25,"nodeType":"360","messageId":"361","endLine":20,"endColumn":40},{"ruleId":"358","severity":1,"message":"369","line":16,"column":10,"nodeType":"360","messageId":"361","endLine":16,"endColumn":23},{"ruleId":"350","replacedBy":"370"},{"ruleId":"352","replacedBy":"371"},{"ruleId":"358","severity":1,"message":"372","line":2,"column":20,"nodeType":"360","messageId":"361","endLine":2,"endColumn":29},{"ruleId":"358","severity":1,"message":"373","line":13,"column":21,"nodeType":"360","messageId":"361","endLine":13,"endColumn":33},{"ruleId":"358","severity":1,"message":"374","line":18,"column":17,"nodeType":"360","messageId":"361","endLine":18,"endColumn":23},{"ruleId":"358","severity":1,"message":"375","line":9,"column":17,"nodeType":"360","messageId":"361","endLine":9,"endColumn":25},{"ruleId":"358","severity":1,"message":"374","line":10,"column":19,"nodeType":"360","messageId":"361","endLine":10,"endColumn":25},{"ruleId":"358","severity":1,"message":"375","line":11,"column":17,"nodeType":"360","messageId":"361","endLine":11,"endColumn":25},{"ruleId":"358","severity":1,"message":"374","line":18,"column":17,"nodeType":"360","messageId":"361","endLine":18,"endColumn":23},{"ruleId":"358","severity":1,"message":"372","line":3,"column":20,"nodeType":"360","messageId":"361","endLine":3,"endColumn":29},{"ruleId":"358","severity":1,"message":"376","line":4,"column":8,"nodeType":"360","messageId":"361","endLine":4,"endColumn":14},{"ruleId":"358","severity":1,"message":"375","line":13,"column":17,"nodeType":"360","messageId":"361","endLine":13,"endColumn":25},{"ruleId":"358","severity":1,"message":"377","line":18,"column":15,"nodeType":"360","messageId":"361","endLine":18,"endColumn":21},{"ruleId":"358","severity":1,"message":"366","line":1,"column":8,"nodeType":"360","messageId":"361","endLine":1,"endColumn":13},{"ruleId":"358","severity":1,"message":"378","line":20,"column":17,"nodeType":"360","messageId":"361","endLine":20,"endColumn":25},{"ruleId":"358","severity":1,"message":"359","line":23,"column":24,"nodeType":"360","messageId":"361","endLine":23,"endColumn":39},{"ruleId":"358","severity":1,"message":"379","line":25,"column":10,"nodeType":"360","messageId":"361","endLine":25,"endColumn":14},{"ruleId":"358","severity":1,"message":"380","line":25,"column":17,"nodeType":"360","messageId":"361","endLine":25,"endColumn":24},{"ruleId":"358","severity":1,"message":"372","line":2,"column":20,"nodeType":"360","messageId":"361","endLine":2,"endColumn":29},{"ruleId":"358","severity":1,"message":"374","line":13,"column":17,"nodeType":"360","messageId":"361","endLine":13,"endColumn":23},{"ruleId":"358","severity":1,"message":"375","line":9,"column":17,"nodeType":"360","messageId":"361","endLine":9,"endColumn":25},{"ruleId":"358","severity":1,"message":"374","line":18,"column":17,"nodeType":"360","messageId":"361","endLine":18,"endColumn":23},{"ruleId":"358","severity":1,"message":"375","line":10,"column":17,"nodeType":"360","messageId":"361","endLine":10,"endColumn":25},{"ruleId":"354","severity":1,"message":"355","line":56,"column":11,"nodeType":"356","messageId":"357","endLine":64,"endColumn":12},{"ruleId":"358","severity":1,"message":"366","line":4,"column":8,"nodeType":"360","messageId":"361","endLine":4,"endColumn":13},{"ruleId":"358","severity":1,"message":"372","line":5,"column":20,"nodeType":"360","messageId":"361","endLine":5,"endColumn":29},{"ruleId":"358","severity":1,"message":"375","line":8,"column":17,"nodeType":"360","messageId":"361","endLine":8,"endColumn":25},{"ruleId":"358","severity":1,"message":"381","line":48,"column":7,"nodeType":"360","messageId":"361","endLine":48,"endColumn":16},{"ruleId":"358","severity":1,"message":"366","line":1,"column":8,"nodeType":"360","messageId":"361","endLine":1,"endColumn":13},{"ruleId":"358","severity":1,"message":"359","line":16,"column":24,"nodeType":"360","messageId":"361","endLine":16,"endColumn":39},{"ruleId":"358","severity":1,"message":"382","line":17,"column":10,"nodeType":"360","messageId":"361","endLine":17,"endColumn":16},{"ruleId":"358","severity":1,"message":"383","line":19,"column":21,"nodeType":"360","messageId":"361","endLine":19,"endColumn":32},{"ruleId":"358","severity":1,"message":"384","line":6,"column":10,"nodeType":"360","messageId":"361","endLine":6,"endColumn":14},{"ruleId":"358","severity":1,"message":"385","line":6,"column":16,"nodeType":"360","messageId":"361","endLine":6,"endColumn":23},{"ruleId":"358","severity":1,"message":"386","line":7,"column":22,"nodeType":"360","messageId":"361","endLine":7,"endColumn":35},{"ruleId":"358","severity":1,"message":"387","line":8,"column":10,"nodeType":"360","messageId":"361","endLine":8,"endColumn":23},{"ruleId":"358","severity":1,"message":"386","line":10,"column":24,"nodeType":"360","messageId":"361","endLine":10,"endColumn":37},{"ruleId":"358","severity":1,"message":"387","line":11,"column":12,"nodeType":"360","messageId":"361","endLine":11,"endColumn":25},{"ruleId":"358","severity":1,"message":"372","line":2,"column":20,"nodeType":"360","messageId":"361","endLine":2,"endColumn":29},{"ruleId":"358","severity":1,"message":"373","line":12,"column":21,"nodeType":"360","messageId":"361","endLine":12,"endColumn":33},{"ruleId":"358","severity":1,"message":"374","line":15,"column":17,"nodeType":"360","messageId":"361","endLine":15,"endColumn":23},{"ruleId":"358","severity":1,"message":"375","line":9,"column":17,"nodeType":"360","messageId":"361","endLine":9,"endColumn":25},{"ruleId":"358","severity":1,"message":"388","line":10,"column":21,"nodeType":"360","messageId":"361","endLine":10,"endColumn":33},{"ruleId":"358","severity":1,"message":"374","line":14,"column":17,"nodeType":"360","messageId":"361","endLine":14,"endColumn":23},{"ruleId":"358","severity":1,"message":"375","line":25,"column":17,"nodeType":"360","messageId":"361","endLine":25,"endColumn":25},{"ruleId":"358","severity":1,"message":"366","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":13},{"ruleId":"358","severity":1,"message":"359","line":15,"column":24,"nodeType":"360","messageId":"361","endLine":15,"endColumn":39},{"ruleId":"358","severity":1,"message":"389","line":17,"column":24,"nodeType":"360","messageId":"361","endLine":17,"endColumn":38},{"ruleId":"358","severity":1,"message":"368","line":20,"column":25,"nodeType":"360","messageId":"361","endLine":20,"endColumn":40},{"ruleId":"358","severity":1,"message":"372","line":2,"column":20,"nodeType":"360","messageId":"361","endLine":2,"endColumn":29},{"ruleId":"358","severity":1,"message":"390","line":9,"column":10,"nodeType":"360","messageId":"361","endLine":9,"endColumn":16},{"ruleId":"358","severity":1,"message":"391","line":9,"column":18,"nodeType":"360","messageId":"361","endLine":9,"endColumn":27},{"ruleId":"358","severity":1,"message":"392","line":11,"column":10,"nodeType":"360","messageId":"361","endLine":11,"endColumn":21},{"ruleId":"358","severity":1,"message":"393","line":12,"column":10,"nodeType":"360","messageId":"361","endLine":12,"endColumn":22},{"ruleId":"358","severity":1,"message":"359","line":12,"column":24,"nodeType":"360","messageId":"361","endLine":12,"endColumn":39},{"ruleId":"358","severity":1,"message":"394","line":14,"column":9,"nodeType":"360","messageId":"361","endLine":14,"endColumn":17},{"ruleId":"358","severity":1,"message":"374","line":10,"column":19,"nodeType":"360","messageId":"361","endLine":10,"endColumn":25},{"ruleId":"358","severity":1,"message":"375","line":11,"column":17,"nodeType":"360","messageId":"361","endLine":11,"endColumn":25},{"ruleId":"350","replacedBy":"395"},{"ruleId":"352","replacedBy":"396"},{"ruleId":"358","severity":1,"message":"374","line":16,"column":17,"nodeType":"360","messageId":"361","endLine":16,"endColumn":23},{"ruleId":"358","severity":1,"message":"372","line":2,"column":20,"nodeType":"360","messageId":"361","endLine":2,"endColumn":29},{"ruleId":"358","severity":1,"message":"375","line":14,"column":17,"nodeType":"360","messageId":"361","endLine":14,"endColumn":25},{"ruleId":"358","severity":1,"message":"397","line":37,"column":10,"nodeType":"360","messageId":"361","endLine":37,"endColumn":15},"no-native-reassign",["398"],"no-negated-in-lhs",["399"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'setPostsPerPage' is assigned a value but never used.","Identifier","unusedVar",["398"],["399"],["398"],["399"],"'Axios' is defined but never used.","'Redirect' is defined but never used.","'setListEmployee' is assigned a value but never used.","'successUpdate' is assigned a value but never used.",["398"],["399"],"'useEffect' is defined but never used.","'setEmployees' is assigned a value but never used.","'result' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Charts' is defined but never used.","'setKpi' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'isVisible' is assigned a value but never used.","'render' is assigned a value but never used.","'setListTeam' is assigned a value but never used.","'team' is assigned a value but never used.","'setteam' is assigned a value but never used.","'setDeleteList' is assigned a value but never used.","'deleteItemErr' is assigned a value but never used.","'setViewModal' is assigned a value but never used.","'setListProject' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'postsPerPage' is assigned a value but never used.","'paginate' is assigned a value but never used.",["398"],["399"],"'check' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]