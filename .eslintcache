[{"/home/mario/Desktop/ERP Project/front/src/index.js":"1","/home/mario/Desktop/ERP Project/front/src/App.js":"2","/home/mario/Desktop/ERP Project/front/src/Components/Teams.js":"3","/home/mario/Desktop/ERP Project/front/src/Components/Login.js":"4","/home/mario/Desktop/ERP Project/front/src/Components/Reports.js":"5","/home/mario/Desktop/ERP Project/front/src/Components/Projects.js":"6","/home/mario/Desktop/ERP Project/front/src/Components/Employees.js":"7","/home/mario/Desktop/ERP Project/front/src/Components/Admins.js":"8","/home/mario/Desktop/ERP Project/front/src/Components/Sidenav.js":"9","/home/mario/Desktop/ERP Project/front/src/Components/Pagination.js":"10"},{"size":589,"mtime":1609788019075,"results":"11","hashOfConfig":"12"},{"size":1472,"mtime":1609795372915,"results":"13","hashOfConfig":"12"},{"size":176,"mtime":1609886869521,"results":"14","hashOfConfig":"12"},{"size":4899,"mtime":1609886853733,"results":"15","hashOfConfig":"12"},{"size":182,"mtime":1609886862549,"results":"16","hashOfConfig":"12"},{"size":185,"mtime":1609886859805,"results":"17","hashOfConfig":"12"},{"size":187,"mtime":1609886850761,"results":"18","hashOfConfig":"12"},{"size":21603,"mtime":1609921750835,"results":"19","hashOfConfig":"12"},{"size":6601,"mtime":1609886865701,"results":"20","hashOfConfig":"12"},{"size":695,"mtime":1609888234091,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"16n7czc",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/home/mario/Desktop/ERP Project/front/src/index.js",[],["46","47"],"/home/mario/Desktop/ERP Project/front/src/App.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Teams.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Login.js",["48"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"../App.css\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  const [authErr, setAuthErr] = useState(\"\");\n  const [passErr, setPassErr] = useState(\"\");\n  const [usernameErr, setUsernameErr] = useState(\"\");\n  const [isPassShown, setIsPassShown] = useState(false);\n\n  const toggleVisibility = () => {\n    setIsPassShown(!isPassShown);\n  };\n\n  const HandleLogin = async (e) => {\n    e.preventDefault();\n    if (!username && !password) {\n      setUsernameErr(\"Username is invalid!\");\n      setPassErr(\"Password is invalid!\");\n      setAuthErr(\"\");\n    } else if (username && !password) {\n      setUsernameErr(\"\");\n      setPassErr(\"Password is invalid\");\n      setAuthErr(\"\");\n    } else if (!username && password) {\n      setPassErr(\"\");\n      setUsernameErr(\"Username is invalid!\");\n      setAuthErr(\"\");\n    } else if (password.length < 6) {\n      setPassErr(\"Password must containt at least 6 characters!\");\n      setAuthErr(\"\");\n      setUsernameErr(\"\");\n    } else if (username.length < 5) {\n      setUsernameErr(\"Username must containt at least 5 characters!\");\n      setAuthErr(\"\");\n      setPassErr(\"\");\n    } else if (username.length < 5 && password.length < 6) {\n      setUsernameErr(\"Username must containt at least 5 characters!\");\n      setPassErr(\"Password must containt at least 6 characters!\");\n      setAuthErr(\"\");\n    } else {\n      try {\n        await Axios.post(\"http://localhost:8000/api/login\", {\n          username: username,\n          password: password,\n        }).then((response) => {\n          setAuthErr(response.data.error + \" Username or Password\");\n          setUsernameErr(\"\");\n          setPassErr(\"\");\n          setToken(response.data.access_token);\n          {\n            localStorage.setItem(\"image\", response.data.user.image);\n            localStorage.setItem(\"id\", response.data.user.id);\n            localStorage.setItem(\"username\", response.data.user.username);\n            response &&\n              response.data &&\n              response.data.access_token &&\n              localStorage.setItem(\"token\", response.data.access_token);\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"login\">\n        <div className=\"login_block\">\n          <form\n            className=\"login-form\"\n            style={{ width: \"40%\", margin: \"8% auto\" }}\n          >\n            <div className=\"form-group\">\n              <p>\n                {authErr ? (\n                  <span class=\"error_msg\">\n                    {authErr}\n                    {\"\\t\"}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </p>\n              <label className=\"login-label\" htmlFor=\"exampleInputEmail1\">\n                Username\n              </label>\n              <p>\n                {usernameErr ? (\n                  <span class=\"error_msg\">\n                    {usernameErr}\n                    {\"\\t\"}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </p>\n              <input\n                type=\"text\"\n                value={username}\n                className=\"form-control-login\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Username\"\n                onChange={(e) => {\n                  setUsername(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label className=\"login-label\" htmlFor=\"exampleInputPassword1\">\n                Password\n              </label>\n              <br />\n              {passErr ? <span class=\"error_msg\">{passErr}</span> : \"\"}\n              <div className=\"eye\">\n                <input\n                  type={isPassShown ? \"text\" : \"password\"}\n                  value={password}\n                  className=\"form-control-login\"\n                  id=\"exampleInputPassword1\"\n                  placeholder=\"Password\"\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                />{\" \"}\n                <i\n                  id=\"fa1\"\n                  className=\"fa fa-eye password-icon\"\n                  onClick={toggleVisibility}\n                />\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn\" onClick={HandleLogin}>\n              <span className=\"submit\"> Submit</span>\n            </button>\n          </form>\n          {token ? <Redirect exact to=\"/Admins\" /> : <Redirect exact to=\"/\" />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/mario/Desktop/ERP Project/front/src/Components/Reports.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Projects.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Employees.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Admins.js",["49"],"import Axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Sidenav from \"./Sidenav\";\nimport Pagination from './Pagination';\n\nconst Admins = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [newfirstName, setNewfirstName] = useState(\"\");\n  const [newLastName, setNewLastName] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newImage, setNewImage] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [render, setRender] = useState();\n  const [lastnameErr, setLastnameErr] = useState(\"\");\n  const [emailErr, setEmailErr] = useState(\"\");\n  const [firstnameErr, setFirstnameErr] = useState(\"\");\n  const [passErr, setPassErr] = useState(\"\");\n  const [usernameErr, setUsernameErr] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [successUpdate, setSuccessUpdate] = useState(\"\");\n  const [imageErr, setImageErr] = useState(\"\");\n  const [newlastnameErr, setnewLastnameErr] = useState(\"\");\n  const [newemailErr, setnewEmailErr] = useState(\"\");\n  const [newfirstnameErr, setnewFirstnameErr] = useState(\"\");\n  const [newimageErr, setnewImageErr] = useState(\"\");\n  const [infoErr, setInfoErr] = useState(\"\");\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(6);\n\n  const numOfAdmins = users.length;\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:8000/api/users\", {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      },\n    }).then((response) => {\n      setUsers(response.data);\n      setLoading(false);\n    });\n  }, [render]);\n\n  useEffect(() => {\n    setFilteredData(\n      users.filter(\n        (user) =>\n          user.firstname.toLowerCase().includes(search.toLowerCase()) ||\n          user.lastname.toLowerCase().includes(search.toLowerCase()) ||\n          user.email.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  }, [search, users, render]);\n\n  useEffect(() => {\n    localStorage.getItem(\"image\");\n    console.log(localStorage.getItem(\"image\"));\n  }, []);\n\n  useEffect(() => {\n    localStorage.getItem(\"id\");\n    console.log(localStorage.getItem(\"id\"));\n  }, []);\n\n  useEffect(() => {\n    localStorage.getItem(\"username\");\n    console.log(localStorage.getItem(\"username\"));\n  }, []);\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"firstname\", firstName);\n    data.append(\"lastname\", lastName);\n    data.append(\"email\", email);\n    data.append(\"image\", image);\n    data.append(\"username\", userName);\n    data.append(\"password\", password);\n    try {\n      await Axios.post(\"http://localhost:8000/api/register\", data, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((response) => {\n        console.log(response.data);\n        localStorage.getItem(\"token\");\n        setLoading(false);\n        setUsers([\n          ...users,\n          {\n            firstname: firstName,\n            lastname: lastName,\n            email: email,\n            image: image,\n            username: userName,\n            password: password,\n          },\n        ]);\n        setSuccess(\"Data has been inserted\");\n        setFirstnameErr(\"\");\n        setLastnameErr(\"\");\n        setEmailErr(\"\");\n        setUsernameErr(\"\");\n        setPassErr(\"\");\n        setImageErr(\"\");\n      });\n    } catch (error) {\n      if (\n        error.response.data.error.firstname &&\n        error.response.data.error.lastname &&\n        error.response.data.error.email &&\n        error.response.data.error.username &&\n        error.response.data.error.password &&\n        error.response.data.error.image\n      ) {\n        setFirstnameErr(error.response.data.error.firstname);\n        setLastnameErr(error.response.data.error.lastname);\n        setEmailErr(error.response.data.error.email);\n        setUsernameErr(error.response.data.error.username);\n        setPassErr(error.response.data.error.password);\n        setImageErr(error.response.data.error.image);\n      } else if (!error.response.data.error.firstname) {\n        setFirstnameErr(\"\");\n      } else if (\n        error.response.data.error.firstname ||\n        error.response.data.error.lastname ||\n        error.response.data.error.email ||\n        error.response.data.error.username ||\n        error.response.data.error.password ||\n        error.response.data.error.image\n      ) {\n        setInfoErr(\"Your information are not Valid!\");\n      } else if (!error.response.data.error.lastname) {\n        setLastnameErr(\"\");\n      } else if (!error.response.data.error.email) {\n        setEmailErr(\"\");\n      } else if (!error.response.data.error.username) {\n        setUsernameErr(\"\");\n      } else if (!error.response.data.error.password) {\n        setPassErr(\"\");\n      } else if (!error.response.data.error.image) {\n        setImageErr(\"\");\n      } else if (error.response.data.error.firstname) {\n        setFirstnameErr(error.response.data.error.firstname);\n      } else if (error.response.data.error.lastname) {\n        setLastnameErr(error.response.data.error.lastname);\n      } else if (error.response.data.error.email) {\n        setEmailErr(error.response.data.error.email);\n      } else if (error.response.data.error.username) {\n        setUsernameErr(error.response.data.error.username);\n      } else if (error.response.data.error.password) {\n        setPassErr(error.response.data.error.password);\n      } else if (error.response.data.error.image) {\n        setImageErr(error.response.data.error.image);\n      }\n    }\n  };\n  if (loading) {\n    return <p>Loading data...</p>;\n  }\n  const deleteItem = async (id) => {\n    try {\n      await Axios.delete(`http://localhost:8000/api/users/${id} `, {\n        headers: {\n          Accept: \"application/json\",\n          \"content-type\": \"multipart/form-data\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      }).then((data) => {\n        if (data.status === 200) {\n          console.log(data);\n          // alert(\"Deleted!\");\n          const newData = users.filter((item) => item.id !== id);\n          setUsers(newData);\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateInfo = async (id) => {\n    if (!newfirstName && !newLastName && !newEmail && !newImage) {\n      setnewFirstnameErr(\"Firstname is Required!\");\n      setnewLastnameErr(\"Lastname is Required!\");\n      setnewEmailErr(\"Email is Invalid!\");\n      setnewImageErr(\"Image is required!\");\n    } else if (newfirstName && !newLastName && !newEmail && !newImage) {\n      setnewFirstnameErr(\"\");\n      setnewLastnameErr(\"Lastname is Required!\");\n      setnewEmailErr(\"Email is Invalid!\");\n      setnewImageErr(\"Image is required!\");\n    } else if (!newfirstName && newLastName && !newEmail && !newImage) {\n      setnewFirstnameErr(\"Firstname is Required!\");\n      setnewLastnameErr(\"\");\n      setnewEmailErr(\"Email is Invalid!\");\n      setnewImageErr(\"Image is required!\");\n    } else if (!newfirstName && !newLastName && newEmail && !newImage) {\n      setnewFirstnameErr(\"Firstname is Required!\");\n      setnewLastnameErr(\"Lastname is Required!\");\n      setnewEmailErr(\"\");\n      setnewImageErr(\"Image is required!\");\n    } else if (!newfirstName && newLastName && !newEmail && newImage) {\n      setnewFirstnameErr(\"Firstname is Required!\");\n      setnewLastnameErr(\"Lastname is Required!\");\n      setnewEmailErr(\"Email is Invalid!\");\n      setnewImageErr(\"\");\n    } else if (!newEmail.includes(\"@\") && !newEmail.includes(\".com\")) {\n      setnewEmailErr(\"Please enter a valid email address\");\n    } else {\n      const data = new FormData();\n      data.append(\"firstname\", newfirstName);\n      data.append(\"lastname\", newLastName);\n      data.append(\"email\", newEmail);\n      data.append(\"image\", newImage);\n      try {\n        await Axios.post(\n          `http://localhost:8000/api/users/${id}?_method=PUT `,\n          data,\n          {\n            headers: {\n              \"content-type\": \"multipart/form-data\",\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          }\n        ).then((response) => {\n          console.log(response);\n          setRender(!render);\n          setSuccessUpdate(\"Data has been updated\");\n          setnewFirstnameErr(\"\");\n          setnewLastnameErr(\"\");\n          setnewEmailErr(\"\");\n          setnewImageErr(\"\");\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    if (!localStorage.getItem(\"token\")) {\n      return <Redirect to=\"/\" />;\n    }\n  };\n\n\n  const indexOfLastPost = currentPage * postsPerPage;\n    // console.log(\"indexOfLastPost: \", indexOfLastPost);\n\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    // console.log(\"indexOfFirstPost: \", indexOfFirstPost);\n\n    const currentPosts = filteredData.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber => {\n        setCurrentPage(pageNumber);\n    };\n    console.log(\"currentPosts: \", currentPosts);\n\n  return (\n    <div className=\"admin\">\n      <Sidenav />\n\n      <div className=\"container\">\n        <div className=\"header\">\n          <button\n            type=\"button\"\n            id=\"change1\"\n            className=\"btn  btn-md\"\n            data-toggle=\"modal\"\n            data-target=\"#myModal\"\n          >\n            Add Admin\n          </button>\n          \n          <form className=\"search\">\n            <input\n              value={search}\n              placeholder=\"Find Admins...\"\n              type=\"text\"\n              name=\"\"\n              className=\"search__field\"\n              onChange={(e) => {\n                setSearch(e.target.value);\n              }}\n            />\n          </form>\n          <div className=\"username-section\">\n            <img\n              className=\"user-image\"\n              src={`http://localhost:8000/storage/${localStorage.getItem(\n                \"image\"\n              )}`}\n              alt=\"error\"\n            />\n          <div className=\"admin_name\">\n        <span >{localStorage.getItem(\"username\")}</span>\n        </div>\n          </div>\n        </div>\n       \n        <h1>\n          Number of Admins is{\"  \"}\n          <span className=\"badge badge-secondary\">{numOfAdmins}</span>\n        </h1>\n        {successUpdate ? (\n          <p className=\"alert alert-success\">{successUpdate}</p>\n        ) : (\n          \"\"\n        )}\n        <div className=\"admin\">\n          {filteredData.length === 0 ? (\n            <div>No result found!</div>\n          ) : (\n            currentPosts.map((arr) => {\n              return (\n                <div className=\"parent\" key={arr.id}>\n                  <img\n                    src={`http://localhost:8000/storage/${arr.image}`}\n                    alt=\"error\"\n                  />\n                  <p className=\"admins\">\n                    {arr.firstname} {arr.lastname}\n                    <span>{arr.email}</span>{\" \"}\n                  </p>\n                  <div className=\"buttons_under_admin\">\n                    <div className=\"dropdown\">\n                      <button\n                        id=\"change2\"\n                        className=\"btn  dropdown-toggle\"\n                        type=\"button\"\n                        data-toggle=\"dropdown\"\n                      >\n                        Update Admin info<span className=\"caret\"></span>\n                      </button>\n                      <ul className=\"dropdown-menu\">\n                        <p className=\"error_update\">\n                          {newfirstnameErr ? (\n                            <span className=\"error_msg\">{newfirstnameErr}</span>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                        <label className=\"updateLabel\">Firstname</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"enter firstname\"\n                          onChange={(e) => {\n                            setNewfirstName(e.target.value);\n                          }}\n                        />\n                        <p className=\"error_update\">\n                          {newlastnameErr ? (\n                            <span className=\"error_msg\">{newlastnameErr}</span>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                        <label className=\"updateLabel\">Lastname</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"enter lastname\"\n                          onChange={(e) => {\n                            setNewLastName(e.target.value);\n                          }}\n                        />\n                        <p className=\"error_update\">\n                          {newemailErr ? (\n                            <span className=\"error_msg\">{newemailErr}</span>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                        <label className=\"updateLabel\">Email</label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          placeholder=\"enter email\"\n                          onChange={(e) => {\n                            setNewEmail(e.target.value);\n                          }}\n                        />\n                        <p className=\"error_update\">\n                          {newimageErr ? (\n                            <span className=\"error_msg\">{newimageErr}</span>\n                          ) : (\n                            \"\"\n                          )}\n                        </p>\n                        <br></br>\n                        <label className=\"updateLabel\">\n                          Image\n                          <input\n                            className=\"form-control\"\n                            type=\"file\"\n                            name=\"image\"\n                            id=\"image\"\n                            placeholder=\"Enter your Address\"\n                            onChange={(e) => {\n                              setNewImage(e.target.files[0]);\n                              console.log(e.target.files[0]);\n                            }}\n                          />\n                        </label>\n                        <button\n                          id=\"change1\"\n                          className=\"Button_update\"\n                          onClick={() => {\n                            updateInfo(arr.id);\n                          }}\n                        >\n                          Edit\n                        </button>\n                      </ul>\n                    </div>\n                    <button\n                      className=\"Button\"\n                      id=\"change\"\n                      onClick={() => {\n                        deleteItem(arr.id);\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              );\n            })\n          )}\n         \n        </div>\n        <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\n          <div className=\"modal-dialog modal-lg\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                  &times;\n                </button>\n                <h4 className=\"modal-title\">Add an Admin to the list</h4>\n              </div>\n              <form encType=\"multipart/form-data\">\n                <div className=\"modal-body\">\n                  {infoErr ? (\n                    <div className=\"alert alert-danger\">{infoErr}</div>\n                  ) : (\n                    \"\"\n                  )}\n                  {success ? (\n                    <div className=\"alert alert-success\">{success}</div>\n                  ) : (\n                    \"\"\n                  )}\n                  <label htmlFor=\"name\">First name:</label>\n                  <p className=\"err_pos\">\n                    {firstnameErr ? (\n                      <span className=\"error_msg\">{firstnameErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={firstName}\n                    className=\"form-control\"\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Enter firstname\"\n                    onChange={(e) => {\n                      setFirstName(e.target.value);\n                    }}\n                  />\n                  <label htmlFor=\"lastname\">Last name:</label>\n                  <p className=\"err_pos\">\n                    {lastnameErr ? (\n                      <span className=\"error_msg\">{lastnameErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={lastName}\n                    className=\"form-control\"\n                    id=\"lastname\"\n                    type=\"text\"\n                    placeholder=\"Enter lastname\"\n                    onChange={(e) => {\n                      setLastName(e.target.value);\n                    }}\n                  />\n                  <label htmlFor=\"email\">Email</label>\n                  <p className=\"err_pos\">\n                    {emailErr ? (\n                      <span className=\"error_msg\">{emailErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={email}\n                    className=\"form-control\"\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    onChange={(e) => {\n                      setEmail(e.target.value);\n                    }}\n                  />\n                  <label htmlFor=\"image\">Image</label>\n                  <p className=\"err_pos\">\n                    {imageErr ? (\n                      <span className=\"error_msg\">{imageErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    className=\"form-control\"\n                    type=\"file\"\n                    name=\"image\"\n                    id=\"image\"\n                    onChange={(e) => {\n                      setImage(e.target.files[0]);\n                      console.log(e.target.files[0]);\n                    }}\n                  />\n                  <label htmlFor=\"username\">Username:</label>\n                  <p className=\"err_pos\">\n                    {usernameErr ? (\n                      <span className=\"error_msg\">{usernameErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={userName}\n                    className=\"form-control\"\n                    id=\"username\"\n                    type=\"text\"\n                    placeholder=\"Enter username\"\n                    onChange={(e) => {\n                      setUserName(e.target.value);\n                    }}\n                  />\n                  <label htmlFor=\"password\">Password:</label>\n                  <p className=\"err_pos\">\n                    {passErr ? (\n                      <span className=\"error_msg\">{passErr}</span>\n                    ) : (\n                      \"\"\n                    )}\n                  </p>\n                  <input\n                    value={password}\n                    className=\"form-control\"\n                    id=\"password\"\n                    type=\"password\"\n                    placeholder=\"Enter password\"\n                    onChange={(e) => {\n                      setPassword(e.target.value);\n                    }}\n                  />\n                  <button\n                    id=\"add-button\"\n                    className=\"btn btn-lg btn-block\"\n                    onClick={handleAdd}\n                  >\n                    Submit\n                  </button>\n                </div>\n              </form>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-default\"\n                  data-dismiss=\"modal\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        <div className=\"container mt-5\">\n                    <Pagination\n                        paginate={paginate}\n                        postsPerPage={postsPerPage}\n                        totalPosts={filteredData.length}\n                    />\n    </div>\n      </div>\n   \n    </div>\n  );\n};\nexport default Admins;\n","/home/mario/Desktop/ERP Project/front/src/Components/Sidenav.js",[],"/home/mario/Desktop/ERP Project/front/src/Components/Pagination.js",[],["50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":56,"column":11,"nodeType":"58","messageId":"59","endLine":64,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":40,"column":24,"nodeType":"62","messageId":"63","endLine":40,"endColumn":39},{"ruleId":"52","replacedBy":"64"},{"ruleId":"54","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'setPostsPerPage' is assigned a value but never used.","Identifier","unusedVar",["66"],["67"],"no-global-assign","no-unsafe-negation"]